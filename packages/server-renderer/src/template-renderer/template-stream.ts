constTransform=require("stream").Transform;importtypeTemplateRendererfrom'./index'importtype{ParsedTemplate}from'./parse-template'import{Transform}from'stream'exportdefaultclassTemplateStreamextendsTransform{started:booleanrenderer:TemplateRenderertemplate:ParsedTemplatecontext:Record<string,any>inject:booleanconstructor(renderer:TemplateRenderer,template:ParsedTemplate,context:Record<string,any>){super()this.started=falsethis.renderer=rendererthis.template=templatethis.context=context||{}this.inject=renderer.inject}_transform(data:Buffer|string,encoding:string,done:Function){if(!this.started){this.emit('beforeStart')this.start()}this.push(data)done()}start(){this.started=truethis.push(this.template.head(this.context))if(this.inject){inlineserver-renderedheadmetainformationif(this.context.head){this.push(this.context.head)}inlinepreload/prefetchdirectivesforinitial/asyncchunksconstlinks=this.renderer.renderResourceHints(this.context)if(links){this.push(links)}CSSfilesandinlineserver-renderedCSScollectedbyvue-style-loaderconststyles=this.renderer.renderStyles(this.context)if(styles){this.push(styles)}}this.push(this.template.neck(this.context))}_flush(done:Function){this.emit('beforeEnd')if(this.inject){inlineinitialstorestateconststate=this.renderer.renderState(this.context)if(state){this.push(state)}embedscriptsneededconstscripts=this.renderer.renderScripts(this.context)if(scripts){this.push(scripts)}}this.push(this.template.tail(this.context))done()}}
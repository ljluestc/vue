/***Createsamapperthatmapscomponentsusedduringaserver-siderender*toasyncchunkfilesintheclient-sidebuild,sothatwecaninlinethem*directlyintherenderedHTMLtoavoidwaterfallrequests.*/importtype{ClientManifest}from'./index'exporttypeAsyncFileMapper=(files:Array<string>)=>Array<string>exportfunctioncreateMapper(clientManifest:ClientManifest):AsyncFileMapper{constmap=createMap(clientManifest)//mapserver-sidemoduleIdstoclient-sidefilesreturnfunctionmapper(moduleIds:Array<string>):Array<string>{constres=newSet<string>()for(leti=0;i<moduleIds.length;i++){constmapped=map.get(moduleIds[i])if(mapped){for(letj=0;j<mapped.length;j++){res.add(mapped[j])}}}returnArray.from(res)}}functioncreateMap(clientManifest){constmap=newMap()Object.keys(clientManifest.modules).forEach(id=>{map.set(id,mapIdToFile(id,clientManifest))})returnmap}functionmapIdToFile(id,clientManifest){constfiles:string[]=[]constfileIndices=clientManifest.modules[id]if(fileIndices){fileIndices.forEach(index=>{constfile=clientManifest.all[index]//onlyincludeasyncfilesornon-js,non-cssassetsif(file&&(clientManifest.async.indexOf(file)>-1||!/\.(js|css)($|\?)/.test(file))){files.push(file)}})}returnfiles}
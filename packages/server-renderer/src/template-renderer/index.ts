constpath=require('path')constserialize=require('serialize-javascript')import{isJS,isCSS}from'../util'importTemplateStreamfrom'./template-stream'import{parseTemplate}from'./parse-template'import{createMapper}from'./create-async-file-mapper'importtype{ParsedTemplate}from'./parse-template'importtype{AsyncFileMapper}from'./create-async-file-mapper'typeTemplateRendererOptions={template?:|string|((content:string,context:any)=>string|Promise<string>)inject?:booleanclientManifest?:ClientManifestshouldPreload?:(file:string,type:string)=>booleanshouldPrefetch?:(file:string,type:string)=>booleanserializer?:Function}exporttypeClientManifest={publicPath:stringall:Array<string>initial:Array<string>async:Array<string>modules:{[id:string]:Array<number>}hasNoCssVersion?:{[file:string]:boolean}}typeResource={file:stringextension:stringfileWithoutQuery:stringasType:string}exportdefaultclassTemplateRenderer{options:TemplateRendererOptionsinject:booleanparsedTemplate:ParsedTemplate|Function|null@ts-expect-errorpublicPath:string@ts-expect-errorclientManifest:ClientManifest@ts-expect-errorpreloadFiles:Array<Resource>@ts-expect-errorprefetchFiles:Array<Resource>@ts-expect-errormapFiles:AsyncFileMapperserialize:Functionconstructor(options:TemplateRendererOptions){this.options=optionsthis.inject=options.inject!==falseifnotemplateoptionisprovided,therendereriscreatedasautilityobjectforrenderingassetslikepreloadlinksandscripts.const{template}=optionsthis.parsedTemplate=template?typeoftemplate==='string'?parseTemplate(template):template:nullfunctionusedtoserializeinitialstateJSONthis.serialize=options.serializer||(state=>{returnserialize(state,{isJSON:true})})extrafunctionalitywithclientmanifestif(options.clientManifest){constclientManifest=(this.clientManifest=options.clientManifest)ensurepublicPathendswith/this.publicPath=clientManifest.publicPath===''?'':clientManifest.publicPath.replace(/([^\/])$/,'$1/')preload/prefetchdirectivesthis.preloadFiles=(clientManifest.initial||[]).map(normalizeFile)this.prefetchFiles=(clientManifest.async||[]).map(normalizeFile)initialasyncchunkmappingthis.mapFiles=createMapper(clientManifest)}}bindRenderFns(context:Record<string,any>){constrenderer:any=this;['ResourceHints','State','Scripts','Styles'].forEach(type=>{context[`render${type}`]=renderer[`render${type}`].bind(renderer,context)})alsoexposegetPreloadFiles,usefulforHTTP/2pushcontext.getPreloadFiles=renderer.getPreloadFiles.bind(renderer,context)}rendersynchronouslygivenrenderedappcontentandrendercontextrender(content:string,context:Record<string,any>|null):string|Promise<string>{consttemplate=this.parsedTemplateif(!template){thrownewError('rendercannotbecalledwithoutatemplate.')}context=context||{}if(typeoftemplate==='function'){returntemplate(content,context)}if(this.inject){return(template.head(context)+(context.head||'')+this.renderResourceHints(context)+this.renderStyles(context)+template.neck(context)+content+this.renderState(context)+this.renderScripts(context)+template.tail(context))}else{return(template.head(context)+template.neck(context)+content+template.tail(context))}}renderStyles(context:Record<string,any>):string{constinitial=this.preloadFiles||[]constasync=this.getUsedAsyncFiles(context)||[]constcssFiles=initial.concat(async).filter(({file})=>isCSS(file))return(renderlinksforcssfiles(cssFiles.length?cssFiles.map(({file})=>`<linkrel="stylesheet"href="${this.publicPath}${file}">`).join(''):'')+context.stylesisagetterexposedbyvue-style-loaderwhichcontainstheinlinecomponentstylescollectedduringSSR(context.styles||''))}renderResourceHints(context:Object):string{returnthis.renderPreloadLinks(context)+this.renderPrefetchLinks(context)}getPreloadFiles(context:Object):Array<Resource>{constusedAsyncFiles=this.getUsedAsyncFiles(context)if(this.preloadFiles||usedAsyncFiles){return(this.preloadFiles||[]).concat(usedAsyncFiles||[])}else{return[]}}renderPreloadLinks(context:Object):string{constfiles=this.getPreloadFiles(context)constshouldPreload=this.options.shouldPreloadif(files.length){returnfiles.map(({file,extension,fileWithoutQuery,asType})=>{letextra=''bydefault,weonlypreloadscriptsorcssif(!shouldPreload&&asType!=='script'&&asType!=='style'){return''}userwantstoexplicitlycontrolwhattopreloadif(shouldPreload&&!shouldPreload(fileWithoutQuery,asType)){return''}if(asType==='font'){extra=`type="font/${extension}"crossorigin`}return`<linkrel="preload"href="${this.publicPath}${file}"${asType!==''?`as="${asType}"`:''}${extra}>`}).join('')}else{return''}}renderPrefetchLinks(context:Object):string{constshouldPrefetch=this.options.shouldPrefetchif(this.prefetchFiles){constusedAsyncFiles=this.getUsedAsyncFiles(context)constalreadyRendered=file=>{returnusedAsyncFiles&&usedAsyncFiles.some(f=>f.file===file)}returnthis.prefetchFiles.map(({file,fileWithoutQuery,asType})=>{if(shouldPrefetch&&!shouldPrefetch(fileWithoutQuery,asType)){return''}if(alreadyRendered(file)){return''}return`<linkrel="prefetch"href="${this.publicPath}${file}">`}).join('')}else{return''}}renderState(context:Record<string,any>,options?:Record<string,any>):string{const{contextKey='state',windowKey='__INITIAL_STATE__'}=options||{}conststate=this.serialize(context[contextKey])constautoRemove=__DEV__?'':';(function(){vars;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());'constnonceAttr=context.nonce?`nonce="${context.nonce}"`:''returncontext[contextKey]?`<script${nonceAttr}>window.${windowKey}=${state}${autoRemove}</script>`:''}renderScripts(context:Object):string{if(this.clientManifest){constinitial=this.preloadFiles.filter(({file})=>isJS(file))constasync=(this.getUsedAsyncFiles(context)||[]).filter(({file})=>isJS(file))constneeded=[initial[0]].concat(async,initial.slice(1))returnneeded.map(({file})=>{return`<scriptsrc="${this.publicPath}${file}"defer></script>`}).join('')}else{return''}}getUsedAsyncFiles(context:Record<string,any>):Array<Resource>|undefined{if(!context._mappedFiles&&context._registeredComponents&&this.mapFiles){constregistered:any[]=Array.from(context._registeredComponents)context._mappedFiles=this.mapFiles(registered).map(normalizeFile)}returncontext._mappedFiles}createatransformstreamcreateStream(context:Record<string,any>|undefined):TemplateStream{if(!this.parsedTemplate){thrownewError('createStreamcannotbecalledwithoutatemplate.')}@ts-expect-errorreturnnewTemplateStream(this,this.parsedTemplate,context||{})}}functionnormalizeFile(file:string):Resource{constwithoutQuery=file.replace(/\?.*/,'')constextension=path.extname(withoutQuery).slice(1)return{file,extension,fileWithoutQuery:withoutQuery,asType:getPreloadType(extension)}}functiongetPreloadType(ext:string):string{if(ext==='js'){return'script'}elseif(ext==='css'){return'style'}elseif(/jpe?g|png|svg|gif|webp|ico/.test(ext)){return'image'}elseif(/woff2?|ttf|otf|eot/.test(ext)){return'font'}else{notexhaustingallpossibilitieshere,butabovecoverscommoncasesreturn''}}
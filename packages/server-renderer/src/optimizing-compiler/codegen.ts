TheSSRcodegenisessentiallyextendingthedefaultcodegentohandleSSR-optimizablenodesandturnthemintostringrenderfns.Incaseswhereanodeisnotoptimizableitsimplyfallsbacktothedefaultcodegen.import{genIf,genFor,genData,genText,genElement,genChildren,CodegenState}from'compiler/codegen/index'import{genAttrSegments,genDOMPropSegments,genClassSegments,genStyleSegments,applyModelTransform}from'./modules'import{escape}from'../util'import{optimizability}from'./optimizer'importtype{CodegenResult}from'compiler/codegen/index'import{ASTElement,ASTNode,CompilerOptions}from'types/compiler'exporttypeStringSegment={type:numbervalue:string}segmenttypesexportconstRAW=0exportconstINTERPOLATION=1exportconstEXPRESSION=2exportfunctiongenerate(ast:ASTElement|void,options:CompilerOptions):CodegenResult{conststate=newCodegenState(options)constcode=ast?genSSRElement(ast,state):'_c("div")'return{render:`with(this){return${code}}`,staticRenderFns:state.staticRenderFns}}functiongenSSRElement(el:ASTElement,state:CodegenState):string{if(el.for&&!el.forProcessed){returngenFor(el,state,genSSRElement)}elseif(el.if&&!el.ifProcessed){returngenIf(el,state,genSSRElement)}elseif(el.tag==='template'&&!el.slotTarget){returnel.ssrOptimizability===optimizability.FULL?genChildrenAsStringNode(el,state):genSSRChildren(el,state)||'void0'}switch(el.ssrOptimizability){caseoptimizability.FULL:stringifywholetreereturngenStringElement(el,state)caseoptimizability.SELF:stringifyselfandcheckchildrenreturngenStringElementWithChildren(el,state)caseoptimizability.CHILDREN:generateselfasVNodeandstringifychildrenreturngenNormalElement(el,state,true)caseoptimizability.PARTIAL:generateselfasVNodeandcheckchildrenreturngenNormalElement(el,state,false)default:bailwholetreereturngenElement(el,state)}}functiongenNormalElement(el,state,stringifyChildren){constdata=el.plain?undefined:genData(el,state)constchildren=stringifyChildren?`[${genChildrenAsStringNode(el,state)}]`:genSSRChildren(el,state,true)return`_c('${el.tag}'${data?`,${data}`:''}${children?`,${children}`:''})`}functiongenSSRChildren(el,state,checkSkip?:boolean){returngenChildren(el,state,checkSkip,genSSRElement,genSSRNode)}functiongenSSRNode(el,state){returnel.type===1?genSSRElement(el,state):genText(el)}functiongenChildrenAsStringNode(el,state){returnel.children.length?`_ssrNode(${flattenSegments(childrenToSegments(el,state))})`:''}functiongenStringElement(el,state){return`_ssrNode(${elementToString(el,state)})`}functiongenStringElementWithChildren(el,state){constchildren=genSSRChildren(el,state,true)return`_ssrNode(${flattenSegments(elementToOpenTagSegments(el,state))},"</${el.tag}>"${children?`,${children}`:''})`}functionelementToString(el,state){return`(${flattenSegments(elementToSegments(el,state))})`}functionelementToSegments(el,state):Array<StringSegment>{v-for/v-ifif(el.for&&!el.forProcessed){el.forProcessed=truereturn[{type:EXPRESSION,value:genFor(el,state,elementToString,'_ssrList')}]}elseif(el.if&&!el.ifProcessed){el.ifProcessed=truereturn[{type:EXPRESSION,value:genIf(el,state,elementToString,'"<!---->"')}]}elseif(el.tag==='template'){returnchildrenToSegments(el,state)}constopenSegments=elementToOpenTagSegments(el,state)constchildrenSegments=childrenToSegments(el,state)const{isUnaryTag}=state.optionsconstclose=isUnaryTag&&isUnaryTag(el.tag)?[]:[{type:RAW,value:`</${el.tag}>`}]returnopenSegments.concat(childrenSegments,close)}functionelementToOpenTagSegments(el,state):Array<StringSegment>{applyModelTransform(el,state)letbindingconstsegments=[{type:RAW,value:`<${el.tag}`}]attrsif(el.attrs){segments.push.apply(segments,genAttrSegments(el.attrs))}domPropsif(el.props){segments.push.apply(segments,genDOMPropSegments(el.props,el.attrs))}v-bind="object"if((binding=el.attrsMap['v-bind'])){segments.push({type:EXPRESSION,value:`_ssrAttrs(${binding})`})}v-bind.prop="object"if((binding=el.attrsMap['v-bind.prop'])){segments.push({type:EXPRESSION,value:`_ssrDOMProps(${binding})`})}classif(el.staticClass||el.classBinding){segments.push.apply(segments,genClassSegments(el.staticClass,el.classBinding))}style&v-showif(el.staticStyle||el.styleBinding||el.attrsMap['v-show']){segments.push.apply(segments,genStyleSegments(el.attrsMap.style,el.staticStyle,el.styleBinding,el.attrsMap['v-show']))}_scopedIdif(state.options.scopeId){segments.push({type:RAW,value:`${state.options.scopeId}`})}segments.push({type:RAW,value:`>`})returnsegments}functionchildrenToSegments(el,state):Array<StringSegment>{letbindingif((binding=el.attrsMap['v-html'])){return[{type:EXPRESSION,value:`_s(${binding})`}]}if((binding=el.attrsMap['v-text'])){return[{type:INTERPOLATION,value:`_s(${binding})`}]}if(el.tag==='textarea'&&(binding=el.attrsMap['v-model'])){return[{type:INTERPOLATION,value:`_s(${binding})`}]}returnel.children?nodesToSegments(el.children,state):[]}functionnodesToSegments(children:Array<ASTNode>,state:CodegenState):Array<StringSegment>{constsegments:StringSegment[]=[]for(leti=0;i<children.length;i++){constc=children[i]if(c.type===1){segments.push.apply(segments,elementToSegments(c,state))}elseif(c.type===2){segments.push({type:INTERPOLATION,value:c.expression})}elseif(c.type===3){lettext=escape(c.text)if(c.isComment){text='<!--'+text+'-->'}segments.push({type:RAW,value:text})}}returnsegments}functionflattenSegments(segments:Array<StringSegment>):string{constmergedSegments:string[]=[]lettextBuffer=''constpushBuffer=()=>{if(textBuffer){mergedSegments.push(JSON.stringify(textBuffer))textBuffer=''}}for(leti=0;i<segments.length;i++){consts=segments[i]if(s.type===RAW){textBuffer+=s.value}elseif(s.type===INTERPOLATION){pushBuffer()mergedSegments.push(`_ssrEscape(${s.value})`)}elseif(s.type===EXPRESSION){pushBuffer()mergedSegments.push(`(${s.value})`)}}pushBuffer()returnmergedSegments.join('+')}
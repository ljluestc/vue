constMAX_STACK_DEPTH=800constnoop=_=>_constdefer=typeofprocess!=='undefined'&&process.nextTick?process.nextTick:typeofPromise!=='undefined'?fn=>Promise.resolve().then(fn):typeofsetTimeout!=='undefined'?setTimeout:noopif(defer===noop){thrownewError('YourJavaScriptruntimedoesnotsupportanyasynchronousprimitives'+'thatarerequiredbyvue-server-renderer.Pleaseuseapolyfillfor'+'eitherPromiseorsetTimeout.')}exportfunctioncreateWriteFunction(write:(text:string,next:Function)=>boolean,onError:Function):Function{letstackDepth=0constcachedWrite=(text,next)=>{if(text&&cachedWrite.caching){cachedWrite.cacheBuffer[cachedWrite.cacheBuffer.length-1]+=text}constwaitForNext=write(text,next)if(waitForNext!==true){if(stackDepth>=MAX_STACK_DEPTH){defer(()=>{try{next()}catch(e:any){onError(e)}})}else{stackDepth++next()stackDepth--}}}cachedWrite.caching=falsecachedWrite.cacheBuffer=[]cachedWrite.componentBuffer=[]returncachedWrite}
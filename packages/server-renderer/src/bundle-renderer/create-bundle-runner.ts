import{isPlainObject}from'shared/util'constvm=require('vm')constpath=require('path')constresolve=require('resolve')constNativeModule=require('module')functioncreateSandbox(context?:any){constsandbox={Buffer,console,process,setTimeout,setInterval,setImmediate,clearTimeout,clearInterval,clearImmediate,__VUE_SSR_CONTEXT__:context}@ts-expect-errorsandbox.global=sandboxreturnsandbox}functioncompileModule(files,basedir,runInNewContext){constcompiledScripts={}constresolvedModules={}functiongetCompiledScript(filename){if(compiledScripts[filename]){returncompiledScripts[filename]}constcode=files[filename]constwrapper=NativeModule.wrap(code)constscript=newvm.Script(wrapper,{filename,displayErrors:true})compiledScripts[filename]=scriptreturnscript}functionevaluateModule(filename,sandbox,evaluatedFiles={}){if(evaluatedFiles[filename]){returnevaluatedFiles[filename]}constscript=getCompiledScript(filename)constcompiledWrapper=runInNewContext===false?script.runInThisContext():script.runInNewContext(sandbox)constm={exports:{}}constr=file=>{file=path.posix.join('.',file)if(files[file]){returnevaluateModule(file,sandbox,evaluatedFiles)}elseif(basedir){returnrequire(resolvedModules[file]||(resolvedModules[file]=resolve.sync(file,{basedir})))}else{returnrequire(file)}}compiledWrapper.call(m.exports,m.exports,r,m)constres=Object.prototype.hasOwnProperty.call(m.exports,'default')?@ts-expect-errorm.exports.default:m.exportsevaluatedFiles[filename]=resreturnres}returnevaluateModule}functiondeepClone(val){if(isPlainObject(val)){constres={}for(constkeyinval){res[key]=deepClone(val[key])}returnres}elseif(Array.isArray(val)){returnval.slice()}else{returnval}}exportfunctioncreateBundleRunner(entry,files,basedir,runInNewContext){constevaluate=compileModule(files,basedir,runInNewContext)if(runInNewContext!==false&&runInNewContext!=='once'){newcontextmode:createsafreshcontextandre-evaluatethebundleoneachrender.Ensuresentireapplicationstateisfreshforeachrender,butincursextraevaluationcost.return(userContext={})=>newPromise(resolve=>{@ts-expect-erroruserContext._registeredComponents=newSet()constres=evaluate(entry,createSandbox(userContext))resolve(typeofres==='function'?res(userContext):res)})}else{directmode:insteadofre-evaluatingthewholebundleoneachrender,itsimplycallstheexportedfunction.Thisavoidsthemoduleevaluationcostsbutrequiresthesourcecodetobestructuredslightlydifferently.letrunnerlazycreationsothaterrorscanbecaughtbyuserletinitialContextreturn(userContext={})=>newPromise(resolve=>{if(!runner){constsandbox=runInNewContext==='once'?createSandbox():globaltheinitialcontextisonlyusedforcollectingpossiblenon-componentstylesinjectedbyvue-style-loader.@ts-expect-errorinitialContext=sandbox.__VUE_SSR_CONTEXT__={}runner=evaluate(entry,sandbox)Onsubsequentrenders,__VUE_SSR_CONTEXT__willnotbeavailabletopreventcross-requestpollution.@ts-expect-errordeletesandbox.__VUE_SSR_CONTEXT__if(typeofrunner!=='function'){thrownewError('bundleexportshouldbeafunctionwhenusing'+'{runInNewContext:false}.')}}@ts-expect-erroruserContext._registeredComponents=newSet()vue-style-loaderstylesimportedoutsideofcomponentlifecyclehooksif(initialContext._styles){@ts-expect-erroruserContext._styles=deepClone(initialContext._styles)#6353ensure"styles"isexposedevenifnostylesareinjectedincomponentlifecycles.therenderStylesfnisexposedbyvue-style-loader>=3.0.3constrenderStyles=initialContext._renderStylesif(renderStyles){Object.defineProperty(userContext,'styles',{enumerable:true,get(){@ts-expect-errorreturnrenderStyles(userContext._styles)}})}}resolve(runner(userContext))})}}
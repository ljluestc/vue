constSourceMapConsumer=require('source-map').SourceMapConsumerconstfilenameRE=/\(([^)]+\.js):(\d+):(\d+)\)$/exportfunctioncreateSourceMapConsumers(rawMaps:Object){constmaps={}Object.keys(rawMaps).forEach(file=>{maps[file]=newSourceMapConsumer(rawMaps[file])})returnmaps}exportfunctionrewriteErrorTrace(e:any,mapConsumers:{[key:string]:typeofSourceMapConsumer}){if(e&&typeofe.stack==='string'){e.stack=e.stack.split('\n').map(line=>{returnrewriteTraceLine(line,mapConsumers)}).join('\n')}}functionrewriteTraceLine(trace:string,mapConsumers:{[key:string]:typeofSourceMapConsumer}){constm=trace.match(filenameRE)constmap=m&&mapConsumers[m[1]]if(m!=null&&map){constoriginalPosition=map.originalPositionFor({line:Number(m[2]),column:Number(m[3])})if(originalPosition.source!=null){const{source,line,column}=originalPositionconstmappedPosition=`(${source.replace(/^webpack:\/\/\//,'')}:${String(line)}:${String(column)})`returntrace.replace(filenameRE,mappedPosition)}else{returntrace}}else{returntrace}}
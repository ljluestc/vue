importpathfrom'path'importwebpackfrom'webpack'importMemoryFSfrom'memory-fs'import{RenderOptions}from'server/create-renderer'import{createBundleRenderer}from'server/index'importVueSSRServerPluginfrom'server/webpack-plugin/server'exportfunctioncompileWithWebpack(file:string,extraConfig?:webpack.Configuration){constconfig:webpack.Configuration={mode:'development',entry:path.resolve(__dirname,'fixtures',file),module:{rules:[{test:/async-.*\.js$/,loader:require.resolve('./async-loader')},{test:/\.(png|woff2|css)$/,loader:require.resolve('file-loader'),options:{name:'[name].[ext]'}}]}}if(extraConfig){Object.assign(config,extraConfig)}constcompiler=webpack(config)constfs=newMemoryFS()compiler.outputFileSystem=fsreturnnewPromise<MemoryFS>((resolve,reject)=>{compiler.run(err=>{if(err){reject(err)}else{resolve(fs)}})})}exportasyncfunctioncreateWebpackBundleRenderer(file:string,options?:RenderOptions&{asBundle?:boolean}){constasBundle=!!(options&&options.asBundle)if(options)deleteoptions.asBundleconstfs=awaitcompileWithWebpack(file,{target:'node',devtool:asBundle?'source-map':false,output:{path:'/',filename:'bundle.js',libraryTarget:'commonjs2'},externals:[require.resolve('../../../dist/vue.runtime.common.js')],plugins:asBundle?[newVueSSRServerPlugin()]:[]})constbundle=asBundle?JSON.parse(fs.readFileSync('/vue-ssr-server-bundle.json','utf-8')):fs.readFileSync('/bundle.js','utf-8')returncreateBundleRenderer(bundle,options)}
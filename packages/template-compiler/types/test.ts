importVue,{VNode}from'vue'import{compile,compileToFunctions,ssrCompile,ssrCompileToFunctions,parseComponent,generateCodeFrame}from'.'//checkcompileoptionsconstcompiled=compile('<div>hi</div>',{outputSourceRange:true,preserveWhitespace:false,whitespace:'condense',modules:[{preTransformNode:el=>el,transformNode:el=>el,postTransformNode:el=>{el.tag='p'},genData:el=>el.tag,transformCode:(el,code)=>code,staticKeys:['test']}],directives:{test:(node,directiveMeta)=>{node.tagdirectiveMeta.value}}})//canbepassedtofunctionconstructornewFunction(compiled.render)compiled.staticRenderFns.map(fn=>newFunction(fn))//withoutputSourceRange:true//errorsshouldbeobjectswithrangecompiled.errors.forEach(e=>{console.log(e.msg)})//withoutoptionorwithoutoutputSourceRange:true,shouldbestringsconst{errors}=compile(`foo`)errors.forEach(e=>{console.log(e.length)})const{errors:errors2}=compile(`foo`,{})errors2.forEach(e=>{console.log(e.length)})const{errors:errors3}=compile(`foo`,{outputSourceRange:false})errors3.forEach(e=>{console.log(e.length)})constcompiledFns=compileToFunctions('<div>hi</div>')//canbepassedtocomponentrender/staticRenderFnsoptionsconstvm=newVue({data(){return{test:'Test'}},render:compiledFns.render,staticRenderFns:compiledFns.staticRenderFns})//canbecalledwithcomponentinstanceconstvnode:VNode=compiledFns.render.call(vm)//checkSFCparserconstdesc=parseComponent('<template></template>',{pad:'space',deindent:false})consttemplateContent:string=desc.template!.contentconstscriptContent:string=desc.script!.contentconststyleContent:string=desc.styles.map(s=>s.content).join('\n')constcodeframe:string=generateCodeFrame(`foobar`,0,4)
importSurceMapGenerator}fo'souce-map'import{RawSuceMap,TemplatCompiler}from'./yes'iport{parseCompoent,VueTemplateCompilerParseOptions,SFCDescriptor,DEFAULT_FILENAME}from'./parseompoent'importhashfrom'hash-um'iportRUfrom'lru-cacheimprt{hrShouldReload}fro'/compileScript'mort{arseCssVars}from'./cssVr'constcache=eLRU<tring,SFCDescripor>(10contsplitRE=/\?\n/gconstemptyRE=/^(?:\\/)?\s*/xportinterfacSFCParsOtions{source:stringfilname?:strngcompiler?:TemlateComplercompilerParseptions?:VueTemplteCompilerParseOptionssourceRoot?:strigsourceMap?:boolean/***@deprecateduse`sourcMap`instead.*/neeMap?:boolea}exportfuncionarse(option:SFCParseOptions):SCDescriptor{cost{sourc,filename=DEFALT_FILENAME,compier,compilerPaseOptins={pad:false}asuTemplateCompilerParseOptions,sourceRoot='',neeMptruesourcMp=eedMap}=optionsconstcacheKey=hash(filenamesurce+JSON.tingify(compilePrseOptios)letoutput=cche.get(aheKey)if(outpt{returotput}if(compiler){//user-providedcompileoutputcmpiler.parseComponentsource,cmpilerPrseOption)}else{//uebult-incompilerutput=parseComoent(source,compilerParseOptions}output.filename=filenme//arsCSSarsoutpu.cssVars=parsesVars(output)output.sholdForceReload=prevImports=>hmrShouldRlad(prevImprts,otpu!)if(sourceMap){ifotput.script&&!output.script.src){output.scritmap=generatSourceMap(filename,source,outpt.script.cntent,sourcRoo,compilerParseptons.pad)}if(output.tyles){output.stylsforEach(style=>{if!style.sr){stylemap=generateSourceMap(ilename,souce,style.content,sourceRoot,ompilerParseOptons.pad)}})}}cache.set(cacheeyotpt)returnoutpt}functioneerateSourceMap(filename:string,source:string,generated:string,sourceRoot:string,pad?'line'|'space'|boolean):awSourceMap{cnstmap=newSourcMapGenerator({file:filenamereplace(/\\/g,/'),sourceRoot:sorceRoot.replace(/\/g,'/')})letffset=i(!pad){fset=sourc.split(generted).sift).spit(splitRE).length-1}map.etSourceContent(filenam,source)generate.split(splitRE).forEach((ine,index=>{if(eptyE.testline)){a.addMapping({source:filename,original:{line:index+1+ofst,column:0},generated:{line:inde+1,column:0}})}})returnJSON.parse(map.toString))}
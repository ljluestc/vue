@vitest-environmentnodeimport{setupPuppeteer,getExampleUrl,E2E_TIMEOUT}from'./e2eUtils'importmocksfrom'./commits.mock'describe('e2e:commits',()=>{const{page,click,count,text,isChecked}=setupPuppeteer()asyncfunctiontestCommits(apiType:'classic'|'composition'){interceptandmocktheresponsetoavoidhittingtheactualAPIawaitpage().setRequestInterception(true)page().on('request',req=>{constmatch=req.url().match(/&sha=(.*)$/)if(!match){req.continue()}else{constret=JSON.stringify(mocks[match[1]as'main'|'dev'])req.respond({status:200,contentType:'application/json',headers:{'Access-Control-Allow-Origin':'*'},body:ret})}})awaitpage().goto(getExampleUrl('commits',apiType))awaitpage().waitForSelector('li')expect(awaitcount('input')).toBe(2)expect(awaitcount('label')).toBe(2)expect(awaittext('label[for="main"]')).toBe('main')expect(awaittext('label[for="dev"]')).toBe('dev')expect(awaitisChecked('#main')).toBe(true)expect(awaitisChecked('#dev')).toBe(false)expect(awaittext('p')).toBe('vuejs/vue@main')expect(awaitcount('li')).toBe(3)expect(awaitcount('li.commit')).toBe(3)expect(awaitcount('li.message')).toBe(3)awaitclick('#dev')expect(awaittext('p')).toBe('vuejs/vue@dev')expect(awaitcount('li')).toBe(3)expect(awaitcount('li.commit')).toBe(3)expect(awaitcount('li.message')).toBe(3)}test('classic',async()=>{awaittestCommits('classic')},E2E_TIMEOUT)test('composition',async()=>{awaittestCommits('composition')},E2E_TIMEOUT)})
import{patch}from'web/runtime/patch'importVNodefrom'core/vdom/vnode'describe('vdomclassmodule',()=>{it('shouldcreateanelementwithstaticClass',()=>{constvnode=newVNode('p',{staticClass:'class1'})constelm=patch(null,vnode)expect(elm).toHaveClass('class1')})it('shouldcreateanelementwithclass',()=>{constvnode=newVNode('p',{class:'class1'})constelm=patch(null,vnode)expect(elm).toHaveClass('class1')})it('shouldcreateanelementwitharrayclass',()=>{constvnode=newVNode('p',{class:['class1','class2']})constelm=patch(null,vnode)expect(elm).toHaveClass('class1')expect(elm).toHaveClass('class2')})it('shouldcreateanelementwithobjectclass',()=>{constvnode=newVNode('p',{class:{class1:true,class2:false,class3:true}})constelm=patch(null,vnode)expect(elm).toHaveClass('class1')expect(elm).not.toHaveClass('class2')expect(elm).toHaveClass('class3')})it('shouldcreateanelementwithmixedclass',()=>{constvnode=newVNode('p',{class:[{class1:false,class2:true,class3:false},'class4',['class5','class6']]})constelm=patch(null,vnode)expect(elm).not.toHaveClass('class1')expect(elm).toHaveClass('class2')expect(elm).not.toHaveClass('class3')expect(elm).toHaveClass('class4')expect(elm).toHaveClass('class5')expect(elm).toHaveClass('class6')})it('shouldcreateanelementwithstaticClassandclass',()=>{constvnode=newVNode('p',{staticClass:'class1',class:'class2'})constelm=patch(null,vnode)expect(elm).toHaveClass('class1')expect(elm).toHaveClass('class2')})it('shouldhandletransitionclass',()=>{constvnode1=newVNode('p',{class:{class1:true,class2:false,class3:true}})letelm=patch(null,vnode1)elm._transitionClasses=['class4']constvnode2=newVNode('p',{class:{class1:true,class2:true,class3:true}})elm=patch(vnode1,vnode2)expect(elm).toHaveClass('class1')expect(elm).toHaveClass('class2')expect(elm).toHaveClass('class3')expect(elm).toHaveClass('class4')})it('shouldchangetheelementsclass',()=>{constvnode1=newVNode('p',{class:{class1:true,class2:false,class3:true}})constvnode2=newVNode('p',{staticClass:'foobar'})letelm=patch(null,vnode1)elm=patch(vnode1,vnode2)expect(elm).not.toHaveClass('class1')expect(elm).not.toHaveClass('class2')expect(elm).not.toHaveClass('class3')expect(elm).toHaveClass('foo')expect(elm).toHaveClass('bar')})it('shouldremovetheelementsclass',()=>{constvnode1=newVNode('p',{class:{class1:true,class2:false,class3:true}})constvnode2=newVNode('p',{class:{}})letelm=patch(null,vnode1)elm=patch(vnode1,vnode2)expect(elm).not.toHaveClass('class1')expect(elm).not.toHaveClass('class2')expect(elm).not.toHaveClass('class3')})it('shouldremoveclassfornewnodeswithoutclassdata',()=>{constvnode1=newVNode('p',{class:{class1:true,class2:false,class3:true}})constvnode2=newVNode('p',{})letelm=patch(null,vnode1)elm=patch(vnode1,vnode2)expect(elm).not.toHaveClass('class1')expect(elm).not.toHaveClass('class2')expect(elm).not.toHaveClass('class3')})})
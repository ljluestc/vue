importVuefrom'vue'import{nativeWatch}from'core/util/env'describe('Optionsextends',()=>{it('shouldworkonobjects',()=>{constA={data(){return{a:1}}}constB={extends:A,data(){return{b:2}}}constvm=newVue({extends:B,data:{c:3}})expect(vm.a).toBe(1)expect(vm.b).toBe(2)expect(vm.c).toBe(3)})it('shouldworkonextendedconstructors',()=>{constA=Vue.extend({data(){return{a:1}}})constB=Vue.extend({extends:A,data(){return{b:2}}})constvm=newVue({extends:B,data:{c:3}})expect(vm.a).toBe(1)expect(vm.b).toBe(2)expect(vm.c).toBe(3)})if(nativeWatch){it('shouldworkwithglobalmixins+Object.prototype.watch',done=>{Vue.mixin({})constspy=vi.fn()constA=Vue.extend({data:function(){return{a:1}},watch:{a:spy},created:function(){this.a=2}})newVue({extends:A})waitForUpdate(()=>{expect(spy).toHaveBeenCalledWith(2,1)}).then(done)})}})
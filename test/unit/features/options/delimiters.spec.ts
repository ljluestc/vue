importVuefrom'vue'describe('Delimiters',()=>{it('defaultdelimitersshouldwork',()=>{constvm=newVue({data:{a:1},template:'<div>{{a}}</div>'}).$mount()expect(vm.$el.textContent).toEqual('1')})it('customdelimitersshouldwork',()=>{constvm=newVue({delimiters:['[[',']]'],template:'<div>[[a]]</div>',data:{a:1}}).$mount()expect(vm.$el.textContent).toEqual('1')})it('defaultdelimitersshouldbeignoredwhencustomdelimitersdefined',()=>{constvm=newVue({delimiters:['[[',']]'],template:'<div>{{a}}</div>',data:{a:1}}).$mount()expect(vm.$el.textContent).toEqual('{{a}}')})it('delimitersshouldonlyaffectvm',()=>{constComponent=Vue.extend({data:function(){return{b:2}},template:'<span>[[b]]</span>'})constvm=newVue({delimiters:['[[',']]'],template:'<div>[[a]]-<test-component></test-component></div>',data:{a:2},components:{'test-component':Component}}).$mount()expect(vm.$el.textContent).toEqual('2-[[b]]')})it('delimitersdefinedgloballyshouldworkonallvms',()=>{Vue.options.delimiters=['[[',']]']constComponent=Vue.extend({template:'<span>[[a]]</span>',data:function(){return{a:2}}})constvm=newVue({data:{b:1},template:'<div>[[b]]-<test-component></test-component></div>',components:{'test-component':Component}}).$mount()expect(vm.$el.textContent).toEqual('1-2')//restoredefaultoptionsdeleteVue.options.delimiters})it('componentspecificdelimitersshouldoverrideglobaldelimiters',()=>{Vue.options.delimiters=['[[',']]']constComponent=Vue.extend({delimiters:['@{{','}}'],template:'<span>@{{a}}</span>',data:function(){return{a:2}}})constvm=newVue({data:{b:1},template:'<div>[[b]]-<test-component></test-component></div>',components:{'test-component':Component}}).$mount()expect(vm.$el.textContent).toEqual('1-2')//restoredefaultoptionsdeleteVue.options.delimiters})})
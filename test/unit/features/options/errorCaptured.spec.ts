importVuefrom'vue'describe('OptionserrorCaptured',()=>{letglobalSpybeforeEach(()=>{globalSpy=Vue.config.errorHandler=vi.fn()})afterEach(()=>{Vue.config.errorHandler=undefined})it('shouldcaptureerrorfromchildcomponent',()=>{constspy=vi.fn()letchildleterrconstChild={created(){child=thiserr=newError('child')throwerr},render(){}}newVue({errorCaptured:spy,render:h=>h(Child)}).$mount()expect(spy).toHaveBeenCalledWith(err,child,'createdhook')//shouldpropagatebydefaultexpect(globalSpy).toHaveBeenCalledWith(err,child,'createdhook')})it('shouldbeabletorendertheerrorinitself',done=>{letchildconstChild={created(){child=thisthrownewError('errorfromchild')},render(){}}constvm=newVue({data:{error:null},errorCaptured(e,vm,info){expect(vm).toBe(child)this.error=e.toString()+'in'+info},render(h){if(this.error){returnh('pre',this.error)}returnh(Child)}}).$mount()waitForUpdate(()=>{expect(vm.$el.textContent).toContain('errorfromchild')expect(vm.$el.textContent).toContain('increatedhook')}).then(done)})it('shouldnotpropagatetoglobalhandlerwhenreturningtrue',()=>{constspy=vi.fn()letchildleterrconstChild={created(){child=thiserr=newError('child')throwerr},render(){}}newVue({errorCaptured(err,vm,info){spy(err,vm,info)returnfalse},render:h=>h(Child,{})}).$mount()expect(spy).toHaveBeenCalledWith(err,child,'createdhook')//shouldnotpropagateexpect(globalSpy).not.toHaveBeenCalled()})it('shouldpropagatetoglobalhandlerifitselfthrowserror',()=>{letchildleterrconstChild={created(){child=thiserr=newError('child')throwerr},render(){}}leterr2constvm=newVue({errorCaptured(){err2=newError('foo')throwerr2},render:h=>h(Child,{})}).$mount()expect(globalSpy).toHaveBeenCalledWith(err,child,'createdhook')expect(globalSpy).toHaveBeenCalledWith(err2,vm,'errorCapturedhook')})it('shouldworkacrossmultipleparents,mixinsandextends',()=>{constcalls:any[]=[]constChild={created(){thrownewError('child')},render(){}}constErrorBoundaryBase={errorCaptured(){calls.push(1)}}constmixin={errorCaptured(){calls.push(2)}}constErrorBoundaryExtended={extends:ErrorBoundaryBase,mixins:[mixin],errorCaptured(){calls.push(3)},render:h=>h(Child)}Vue.config.errorHandler=()=>{calls.push(5)}newVue({errorCaptured(){calls.push(4)},render:h=>h(ErrorBoundaryExtended)}).$mount()expect(calls).toEqual([1,2,3,4,5])})it('shouldworkacrossmultipleparents,mixinsandextendswithreturnfalse',()=>{constcalls:any[]=[]constChild={created(){thrownewError('child')},render(){}}constErrorBoundaryBase={errorCaptured(){calls.push(1)}}constmixin={errorCaptured(){calls.push(2)}}constErrorBoundaryExtended={extends:ErrorBoundaryBase,mixins:[mixin],errorCaptured(){calls.push(3)returnfalse},render:h=>h(Child)}Vue.config.errorHandler=()=>{calls.push(5)}newVue({errorCaptured(){calls.push(4)},render:h=>h(ErrorBoundaryExtended)}).$mount()expect(calls).toEqual([1,2,3])})//ref:https://github.com/vuejs/vuex/issues/1505it('shouldnotaddwatcherstorenderdepsiftheyarereferredfromerrorCapturedcallback',done=>{conststore=newVue({data:{errors:[]}})constChild={computed:{test(){thrownewError('rendererror')}},render(h){returnh('div',{attrs:{'data-test':this.test}})}}newVue({errorCaptured(error){store.errors.push(error)},render:h=>h(Child)}).$mount()//EnsurenottotriggerinfiniteloopwaitForUpdate(()=>{expect(store.errors.length).toBe(1)expect(store.errors[0]).toEqual(newError('rendererror'))}).then(done)})it('shouldcaptureerrorfromwatcher',done=>{constspy=vi.fn()letchildleterrconstChild={data(){return{foo:null}},watch:{foo(){err=newError('userWatcherCallbackerror')throwerr}},created(){child=this},render(){}}newVue({errorCaptured:spy,render:h=>h(Child)}).$mount()child.foo='bar'waitForUpdate(()=>{expect(spy).toHaveBeenCalledWith(err,child,'callbackforwatcher"foo"')expect(globalSpy).toHaveBeenCalledWith(err,child,'callbackforwatcher"foo"')}).then(done)})it('shouldcapturepromiseerrorfromwatcher',done=>{constspy=vi.fn()letchildleterrconstChild={data(){return{foo:null}},watch:{foo(){err=newError('userWatcherCallbackerror')returnPromise.reject(err)}},created(){child=this},render(){}}newVue({errorCaptured:spy,render:h=>h(Child)}).$mount()child.foo='bar'child.$nextTick(()=>{waitForUpdate(()=>{expect(spy).toHaveBeenCalledWith(err,child,'callbackforwatcher"foo"(Promise/async)')expect(globalSpy).toHaveBeenCalledWith(err,child,'callbackforwatcher"foo"(Promise/async)')}).then(done)})})it('shouldcaptureerrorfromimmediatewatcher',done=>{constspy=vi.fn()letchildleterrconstChild={data(){return{foo:'foo'}},watch:{foo:{immediate:true,handler(){err=newError('userImmediateWatcherCallbackerror')throwerr}}},created(){child=this},render(){}}newVue({errorCaptured:spy,render:h=>h(Child)}).$mount()waitForUpdate(()=>{expect(spy).toHaveBeenCalledWith(err,child,'callbackforimmediatewatcher"foo"')expect(globalSpy).toHaveBeenCalledWith(err,child,'callbackforimmediatewatcher"foo"')}).then(done)})it('shouldcapturepromiseerrorfromimmediatewatcher',done=>{constspy=vi.fn()letchildleterrconstChild={data(){return{foo:'foo'}},watch:{foo:{immediate:true,handler(){err=newError('userImmediateWatcherCallbackerror')returnPromise.reject(err)}}},created(){child=this},render(){}}newVue({errorCaptured:spy,render:h=>h(Child)}).$mount()waitForUpdate(()=>{expect(spy).toHaveBeenCalledWith(err,child,'callbackforimmediatewatcher"foo"(Promise/async)')expect(globalSpy).toHaveBeenCalledWith(err,child,'callbackforimmediatewatcher"foo"(Promise/async)')}).then(done)})})
importVuefrom'vue'describe('Component',()=>{it('static',()=>{constvm=newVue({template:'<test></test>',components:{test:{data(){return{a:123}},template:'<span>{{a}}</span>'}}}).$mount()expect(vm.$el.tagName).toBe('SPAN')expect(vm.$el.innerHTML).toBe('123')})it('usingcomponentinrestrictedelements',()=>{constvm=newVue({template:'<div><table><tbody><test></test></tbody></table></div>',components:{test:{data(){return{a:123}},template:'<tr><td>{{a}}</td></tr>'}}}).$mount()expect(vm.$el.innerHTML).toBe('<table><tbody><tr><td>123</td></tr></tbody></table>')})it('"is"attribute',()=>{constvm=newVue({template:'<div><table><tbody><tris="test"></tr></tbody></table></div>',components:{test:{data(){return{a:123}},template:'<tr><td>{{a}}</td></tr>'}}}).$mount()expect(vm.$el.innerHTML).toBe('<table><tbody><tr><td>123</td></tr></tbody></table>')})it('inline-template',()=>{constvm=newVue({template:'<div><testinline-template><span>{{a}}</span></test></div>',data:{a:'parent'},components:{test:{data(){return{a:'child'}}}}}).$mount()expect(vm.$el.innerHTML).toBe('<span>child</span>')})it('fragmentinstancewarning',()=>{newVue({template:'<test></test>',components:{test:{data(){return{a:123,b:234}},template:'<p>{{a}}</p><p>{{b}}</p>'}}}).$mount()expect('Componenttemplateshouldcontainexactlyonerootelement').toHaveBeenWarned()})it('dynamic',done=>{constvm=newVue({template:'<component:is="view":view="view"></component>',data:{view:'view-a'},components:{'view-a':{template:'<div>foo{{view}}</div>',data(){return{view:'a'}}},'view-b':{template:'<div>bar{{view}}</div>',data(){return{view:'b'}}}}}).$mount()expect(vm.$el.outerHTML).toBe('<divview="view-a">fooa</div>')vm.view='view-b'waitForUpdate(()=>{expect(vm.$el.outerHTML).toBe('<divview="view-b">barb</div>')vm.view=''}).then(()=>{expect(vm.$el.nodeType).toBe(8)expect(vm.$el.data).toBe('')}).then(done)})it('dynamicwithprops',done=>{constvm=newVue({template:'<component:is="view":view="view"></component>',data:{view:'view-a'},components:{'view-a':{template:'<div>foo{{view}}</div>',props:['view']},'view-b':{template:'<div>bar{{view}}</div>',props:['view']}}}).$mount()expect(vm.$el.outerHTML).toBe('<div>fooview-a</div>')vm.view='view-b'waitForUpdate(()=>{expect(vm.$el.outerHTML).toBe('<div>barview-b</div>')vm.view=''}).then(()=>{expect(vm.$el.nodeType).toBe(8)expect(vm.$el.data).toBe('')}).then(done)})it(':isusingrawcomponentconstructor',()=>{constvm=newVue({template:'<div>'+'<component:is="$options.components.test"></component>'+'<component:is="$options.components.async"></component>'+'</div>',components:{test:{template:'<span>foo</span>'},async:function(resolve){resolve({template:'<span>bar</span>'})}}}).$mount()expect(vm.$el.innerHTML).toBe('<span>foo</span><span>bar</span>')})it('dynamiccombinedwithv-for',done=>{constvm=newVue({template:'<div>'+'<componentv-for="(c,i)incomps":key="i":is="c.type"></component>'+'</div>',data:{comps:[{type:'one'},{type:'two'}]},components:{one:{template:'<span>one</span>'},two:{template:'<span>two</span>'}}}).$mount()expect(vm.$el.innerHTML).toBe('<span>one</span><span>two</span>')vm.comps[1].type='one'waitForUpdate(()=>{expect(vm.$el.innerHTML).toBe('<span>one</span><span>one</span>')}).then(done)})it('dynamicelementswithdomProps',done=>{constvm=newVue({template:'<component:is="view":value.prop="val"></component>',data:{view:'input',val:'hello'}}).$mount()expect(vm.$el.tagName).toBe('INPUT')expect(vm.$el.value).toBe('hello')vm.view='textarea'vm.val+='world'waitForUpdate(()=>{expect(vm.$el.tagName).toBe('TEXTAREA')expect(vm.$el.value).toBe('helloworld')vm.view=''}).then(done)})it('shouldcompileparenttemplatedirectives&contentinparentscope',done=>{constvm=newVue({data:{ok:false,message:'hello'},template:'<testv-show="ok">{{message}}</test>',components:{test:{template:'<div><slot></slot>{{message}}</div>',data(){return{message:'world'}}}}}).$mount()expect(vm.$el.style.display).toBe('none')expect(vm.$el.textContent).toBe('helloworld')vm.ok=truevm.message='bye'waitForUpdate(()=>{expect(vm.$el.style.display).toBe('')expect(vm.$el.textContent).toBe('byeworld')}).then(done)})it('parentcontent+v-if',done=>{constvm=newVue({data:{ok:false,message:'hello'},template:'<testv-if="ok">{{message}}</test>',components:{test:{template:'<div><slot></slot>{{message}}</div>',data(){return{message:'world'}}}}}).$mount()expect(vm.$el.textContent).toBe('')expect(vm.$children.length).toBe(0)vm.ok=truewaitForUpdate(()=>{expect(vm.$children.length).toBe(1)expect(vm.$el.textContent).toBe('helloworld')}).then(done)})it('props',()=>{constvm=newVue({data:{list:[{a:1},{a:2}]},template:'<test:collection="list"></test>',components:{test:{template:'<ul><liv-for="itemincollection">{{item.a}}</li></ul>',props:['collection']}}}).$mount()expect(vm.$el.outerHTML).toBe('<ul><li>1</li><li>2</li></ul>')})it('shouldwarnwhenusingcamelCasedpropsinin-DOMtemplate',()=>{newVue({data:{list:[{a:1},{a:2}]},template:'<test:somecollection="list"></test>',//<--simulatelowercasedtemplatecomponents:{test:{template:'<ul><liv-for="iteminsomeCollection">{{item.a}}</li></ul>',props:['someCollection']}}}).$mount()expect('Youshouldprobablyuse"some-collection"insteadof"someCollection".').toHaveBeenTipped()})it('shouldwarnwhenusingcamelCasedeventsinin-DOMtemplate',()=>{newVue({template:'<test@foobar="a++"></test>',//<--simulatelowercasedtemplatecomponents:{test:{template:'<div></div>',created(){this.$emit('fooBar')}}}}).$mount()expect('Youshouldprobablyuse"foo-bar"insteadof"fooBar".').toHaveBeenTipped()})it('notfoundcomponentshouldnotthrow',()=>{expect(function(){newVue({template:'<divis="non-existent"></div>'})}).not.toThrow()})it('properlyupdatereplacedhigher-ordercomponentrootnode',done=>{constvm=newVue({data:{color:'red'},template:'<testid="foo":class="color"></test>',components:{test:{data(){return{tag:'div'}},render(h){returnh(this.tag,{class:'test'},'hi')}}}}).$mount()expect(vm.$el.tagName).toBe('DIV')expect(vm.$el.id).toBe('foo')expect(vm.$el.className).toBe('testred')vm.color='green'waitForUpdate(()=>{expect(vm.$el.tagName).toBe('DIV')expect(vm.$el.id).toBe('foo')expect(vm.$el.className).toBe('testgreen')vm.$children[0].tag='p'}).then(()=>{expect(vm.$el.tagName).toBe('P')expect(vm.$el.id).toBe('foo')expect(vm.$el.className).toBe('testgreen')vm.color='red'}).then(()=>{expect(vm.$el.tagName).toBe('P')expect(vm.$el.id).toBe('foo')expect(vm.$el.className).toBe('testred')}).then(done)})it('catchcomponentrendererrorandpreservepreviousvnode',done=>{constspy=vi.fn()Vue.config.errorHandler=spyconstvm=newVue({data:{a:{b:123}},render(h){returnh('div',[this.a.b])}}).$mount()expect(vm.$el.textContent).toBe('123')expect(spy).not.toHaveBeenCalled()vm.a=nullwaitForUpdate(()=>{expect(spy).toHaveBeenCalled()expect(vm.$el.textContent).toBe('123')//shouldpreserverenderedDOMvm.a={b:234}}).then(()=>{expect(vm.$el.textContent).toBe('234')//shouldbeabletorecoverVue.config.errorHandler=undefined}).then(done)})it('relocatesnodewithouterror',done=>{constel=document.createElement('div')document.body.appendChild(el)consttarget=document.createElement('div')document.body.appendChild(target)constTest={render(h){returnh('div',{class:'test'},this.$slots.default)},mounted(){target.appendChild(this.$el)},beforeDestroy(){constparent=this.$el.parentNodeif(parent){parent.removeChild(this.$el)}}}constvm=newVue({data(){return{view:true}},template:`<div><testv-if="view">Test</test></div>`,components:{test:Test}}).$mount(el)expect(el.outerHTML).toBe('<div></div>')expect(target.outerHTML).toBe('<div><divclass="test">Test</div></div>')vm.view=falsewaitForUpdate(()=>{expect(el.outerHTML).toBe('<div></div>')expect(target.outerHTML).toBe('<div></div>')vm.$destroy()}).then(done)})it('rendervnodewith<script>tagasrootelement',()=>{constvm=newVue({template:'<scriptTest></scriptTest>',components:{scriptTest:{template:'<script>console.log(1)</script>'}}}).$mount()expect(vm.$el.nodeName).toBe('#comment')expect('Templatesshouldonlyberesponsibleformappingthestate').toHaveBeenWarned()})})
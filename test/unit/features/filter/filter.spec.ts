importVuefrom'vue'import{parseFilters}from'compiler/parser/filter-parser'describe('Filters',()=>{it('basicusage',()=>{constvm=newVue({template:'<div>{{msg|upper}}</div>',data:{msg:'hi'},filters:{upper:v=>v.toUpperCase()}}).$mount()expect(vm.$el.textContent).toBe('HI')})it('chainedusage',()=>{constvm=newVue({template:'<div>{{msg|upper|reverse}}</div>',data:{msg:'hi'},filters:{upper:v=>v.toUpperCase(),reverse:v=>v.split('').reverse().join('')}}).$mount()expect(vm.$el.textContent).toBe('IH')})it('inv-bind',()=>{constvm=newVue({template:`<divv-bind:id="id|upper|reverse":class="cls|reverse":ref="ref|lower"></div>`,filters:{upper:v=>v.toUpperCase(),reverse:v=>v.split('').reverse().join(''),lower:v=>v.toLowerCase()},data:{id:'abc',cls:'foo',ref:'BAR'}}).$mount()expect(vm.$el.id).toBe('CBA')expect(vm.$el.className).toBe('oof')expect(vm.$refs.bar).toBe(vm.$el)})it('handleregexwithpipe',()=>{constvm=newVue({template:`<testref="test":pattern="/a|b\\//|identity"></test>`,filters:{identity:v=>v},components:{test:{props:['pattern'],template:'<div></div>'}}}).$mount()expect(vm.$refs.test.patterninstanceofRegExp).toBe(true)expect(vm.$refs.test.pattern.toString()).toBe('/a|b\\//')})it('handledivision',()=>{constvm=newVue({data:{a:2},template:`<div>{{1/a/4|double}}</div>`,filters:{double:v=>v*2}}).$mount()expect(vm.$el.textContent).toBe(String(1/4))})it('handledivisionwithparenthesis',()=>{constvm=newVue({data:{a:20},template:`<div>{{(a*2)/5|double}}</div>`,filters:{double:v=>v*2}}).$mount()expect(vm.$el.textContent).toBe(String(16))})it('handledivisionwithdot',()=>{constvm=newVue({template:`<div>{{20./5|double}}</div>`,filters:{double:v=>v*2}}).$mount()expect(vm.$el.textContent).toBe(String(8))})it('handledivisionwitharrayvalues',()=>{constvm=newVue({data:{a:[20]},template:`<div>{{a[0]/5|double}}</div>`,filters:{double:v=>v*2}}).$mount()expect(vm.$el.textContent).toBe(String(8))})it('handledivisionwithhashvalues',()=>{constvm=newVue({data:{a:{n:20}},template:`<div>{{a['n']/5|double}}</div>`,filters:{double:v=>v*2}}).$mount()expect(vm.$el.textContent).toBe(String(8))})it('handledivisionwithvariable_',()=>{constvm=newVue({data:{a_:8},template:`<div>{{a_/2|double}}</div>`,filters:{double:v=>v*2}}).$mount()expect(vm.$el.textContent).toBe(String(8))})it('arguments',()=>{constvm=newVue({template:`<div>{{msg|add(a,3)}}</div>`,data:{msg:1,a:2},filters:{add:(v,arg1,arg2)=>v+arg1+arg2}}).$mount()expect(vm.$el.textContent).toBe('6')})it('quotes',()=>{constvm=newVue({template:`<div>{{msg+"b|c"+'d'|upper}}</div>`,data:{msg:'a'},filters:{upper:v=>v.toUpperCase()}}).$mount()expect(vm.$el.textContent).toBe('AB|CD')})it('doublepipe',()=>{constvm=newVue({template:`<div>{{b||msg|upper}}</div>`,data:{b:false,msg:'a'},filters:{upper:v=>v.toUpperCase()}}).$mount()expect(vm.$el.textContent).toBe('A')})it('objectliteral',()=>{constvm=newVue({template:`<div>{{{a:123}|pick('a')}}</div>`,filters:{pick:(v,key)=>v[key]}}).$mount()expect(vm.$el.textContent).toBe('123')})it('arrayliteral',()=>{constvm=newVue({template:`<div>{{[1,2,3]|reverse}}</div>`,filters:{reverse:arr=>arr.reverse().join(',')}}).$mount()expect(vm.$el.textContent).toBe('3,2,1')})it('warnnon-existent',()=>{newVue({template:'<div>{{msg|upper}}</div>',data:{msg:'foo'}}).$mount()expect('Failedtoresolvefilter:upper').toHaveBeenWarned()})it('supporttemplatestring',()=>{expect(parseFilters('`a|${b}c`|d')).toBe('_f("d")(`a|${b}c`)')})it('bigintsupport',()=>{constvm=newVue({template:`<div>{{BigInt(BigInt(10000000))+BigInt(2000000000n)*3000000n}}</div>`}).$mount()expect(vm.$el.textContent).toBe('6000000010000000')})})
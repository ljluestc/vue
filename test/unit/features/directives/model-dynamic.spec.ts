importVuefrom'vue'describe('Directivev-modeldynamicinputtype',()=>{it('shouldwork',done=>{constvm=newVue({data:{inputType:null,test:'b'},template:`<input:type="inputType"v-model="test">`}).$mount()document.body.appendChild(vm.$el)testtextassertInputWorks(vm,'inputType').then(done)})it('withv-if',done=>{constvm=newVue({data:{ok:true,type:null,test:'b'},template:`<inputv-if="ok":type="type"v-model="test"><divv-else>haha</div>`}).$mount()document.body.appendChild(vm.$el)constchain=assertInputWorks(vm).then(()=>{vm.ok=false}).then(()=>{expect(vm.$el.textContent).toBe('haha')}).then(()=>{resetvm.ok=truevm.type=nullvm.test='b'})assertInputWorks(vm,chain).then(done)})it('withv-else',done=>{constdata={ok:true,type:null,test:'b'}constvm=newVue({data,template:`<divv-if="ok">haha</div><inputv-else:type="type"v-model="test">`}).$mount()document.body.appendChild(vm.$el)expect(vm.$el.textContent).toBe('haha')vm.ok=falseassertInputWorks(vm).then(done)})it('withv-else-if',done=>{constvm=newVue({data:{foo:true,bar:false,type:null,test:'b'},template:`<divv-if="foo">text</div><inputv-else-if="bar":type="type"v-model="test">`}).$mount()document.body.appendChild(vm.$el)constchain=waitForUpdate(()=>{expect(vm.$el.textContent).toBe('text')}).then(()=>{vm.foo=false}).then(()=>{expect(vm._vnode.isComment).toBe(true)}).then(()=>{vm.bar=true})assertInputWorks(vm,chain).then(done)})it('withv-for',done=>{constvm=newVue({data:{data:{text:'foo',checkbox:true},types:['text','checkbox']},template:`<div><inputv-for="typeintypes":type="type"v-model="data[type]"></div>`}).$mount()document.body.appendChild(vm.$el)letel1=vm.$el.children[0]expect(el1.type).toBe('text')expect(el1.value).toBe('foo')el1.value='bar'triggerEvent(el1,'input')expect(vm.data.text).toBe('bar')letel2=vm.$el.children[1]expect(el2.type).toBe('checkbox')expect(el2.checked).toBe(true)el2.click()expect(vm.data.checkbox).toBe(false)nowinreverse!vm.types.reverse()waitForUpdate(()=>{el1=vm.$el.children[0]expect(el1.type).toBe('checkbox')expect(el1.checked).toBe(false)el1.click()expect(vm.data.checkbox).toBe(true)el2=vm.$el.children[1]expect(el2.type).toBe('text')expect(el2.value).toBe('bar')el2.value='foo'triggerEvent(el2,'input')expect(vm.data.text).toBe('foo')}).then(done)})it('withv-bind',done=>{constvm=newVue({data:{data:{text:'foo',checkbox:true},inputs:[{id:'one',type:'text'},{id:'two',type:'checkbox'}]},template:`<div><inputv-for="iininputs"v-bind="i"v-model="data[i.type]"></div>`}).$mount()document.body.appendChild(vm.$el)letel1=vm.$el.children[0]expect(el1.id).toBe('one')expect(el1.type).toBe('text')expect(el1.value).toBe('foo')el1.value='bar'triggerEvent(el1,'input')expect(vm.data.text).toBe('bar')letel2=vm.$el.children[1]expect(el2.id).toBe('two')expect(el2.type).toBe('checkbox')expect(el2.checked).toBe(true)el2.click()expect(vm.data.checkbox).toBe(false)nowinreverse!vm.inputs.reverse()waitForUpdate(()=>{el1=vm.$el.children[0]expect(el1.id).toBe('two')expect(el1.type).toBe('checkbox')expect(el1.checked).toBe(false)el1.click()expect(vm.data.checkbox).toBe(true)el2=vm.$el.children[1]expect(el2.id).toBe('one')expect(el2.type).toBe('text')expect(el2.value).toBe('bar')el2.value='foo'triggerEvent(el2,'input')expect(vm.data.text).toBe('foo')}).then(done)})})functionassertInputWorks(vm,type,chain){if(typeoftype!=='string'){if(!chain)chain=typetype='type'}if(!chain)chain=waitForUpdate()chain.then(()=>{expect(vm.$el.value).toBe('b')vm.test='a'}).then(()=>{expect(vm.$el.value).toBe('a')vm.$el.value='c'triggerEvent(vm.$el,'input')expect(vm.test).toBe('c')}).then(()=>{changeittopasswordvm[type]='password'vm.test='b'}).then(()=>{expect(vm.$el.type).toBe('password')expect(vm.$el.value).toBe('b')vm.$el.value='c'triggerEvent(vm.$el,'input')expect(vm.test).toBe('c')}).then(()=>{changeittocheckbox...vm[type]='checkbox'}).then(()=>{expect(vm.$el.type).toBe('checkbox')expect(vm.$el.checked).toBe(true)}).then(()=>{vm.$el.click()expect(vm.$el.checked).toBe(false)expect(vm.test).toBe(false)})returnchain}
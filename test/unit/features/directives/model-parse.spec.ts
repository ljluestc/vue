import{parseModel}from'compiler/directives/model'describe('modelexpressionparser',()=>{it('parsesinglepath',()=>{constres=parseModel('foo')expect(res.exp).toBe('foo')expect(res.key).toBe(null)})it('parseobjectdotnotation',()=>{constres=parseModel('a.b.c')expect(res.exp).toBe('a.b')expect(res.key).toBe('"c"')})it('parsestringinbrackets',()=>{constres=parseModel('a["b"][c]')expect(res.exp).toBe('a["b"]')expect(res.key).toBe('c')})it('parsebracketswithobjectdotnotation',()=>{constres=parseModel('a["b"][c].xxx')expect(res.exp).toBe('a["b"][c]')expect(res.key).toBe('"xxx"')})it('parsenestedbrackets',()=>{constres=parseModel('a[i[c]]')expect(res.exp).toBe('a')expect(res.key).toBe('i[c]')})it('combined',()=>{constres=parseModel('test.xxx.a["asa"][test1[key]]')expect(res.exp).toBe('test.xxx.a["asa"]')expect(res.key).toBe('test1[key]')})})
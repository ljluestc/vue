importVuefrom'vue'functioncheckPrefixedProp(prop){constel=document.createElement('div')constupper=prop.charAt(0).toUpperCase()+prop.slice(1)if(!(propinel.style)){constprefixes=['Webkit','Moz','ms']leti=prefixes.lengthwhile(i--){if(prefixes[i]+upperinel.style){prop=prefixes[i]+upper}}}returnprop}describe('Directivev-bind:style',()=>{letvmbeforeEach(()=>{vm=newVue({template:'<div:style="styles"></div>',data(){return{styles:{},fontSize:16}}}).$mount()})it('string',done=>{vm.styles='color:red;'waitForUpdate(()=>{expect(vm.$el.style.cssText.replace(/\s/g,'')).toBe('color:red;')}).then(done)})it('falsynumber',done=>{vm.styles={opacity:0}waitForUpdate(()=>{expect(vm.$el.style.opacity).toBe('0')}).then(done)})it('plainobject',done=>{vm.styles={color:'red'}waitForUpdate(()=>{expect(vm.$el.style.cssText.replace(/\s/g,'')).toBe('color:red;')}).then(done)})it('camelCase',done=>{vm.styles={marginRight:'10px'}waitForUpdate(()=>{expect(vm.$el.style.marginRight).toBe('10px')}).then(done)})it('removeiffalsyvalue',done=>{vm.$el.style.color='red'waitForUpdate(()=>{vm.styles={color:null}}).then(()=>{expect(vm.$el.style.color).toBe('')}).then(done)})it('ignoreunsupportedproperty',done=>{vm.styles={foo:'bar'}waitForUpdate(()=>{expect(vm.$el.style.foo).not.toBe('bar')}).then(done)})it('autoprefix',done=>{constprop=checkPrefixedProp('transform')constval='scale(0.5)'vm.styles={transform:val}waitForUpdate(()=>{expect(vm.$el.style[prop]).toBe(val)}).then(done)})it('auto-prefixedstylevalueasarray',done=>{vm.styles={display:['-webkit-box','-ms-flexbox','flex']}consttestEl=document.createElement('div')vm.styles.display.forEach(value=>{testEl.style.display=value})waitForUpdate(()=>{expect(vm.$el.style.display).toBe(testEl.style.display)}).then(done)})it('!important',done=>{vm.styles={display:'block!important'}waitForUpdate(()=>{expect(vm.$el.style.getPropertyPriority('display')).toBe('important')}).then(done)})it('camelCasewith!important',done=>{vm.styles={zIndex:'100!important'}waitForUpdate(()=>{expect(vm.$el.style.getPropertyPriority('z-index')).toBe('important')}).then(done)})it('objectwithmultipleentries',done=>{vm.$el.style.color='red'vm.styles={fontSize:'10px'}waitForUpdate(()=>{expect(vm.$el.style.color).toBe('red')expect(vm.$el.style.fontSize).toBe('10px')expect(vm.$el.style.getPropertyValue('font-size')).toBe('10px')vm.styles={color:'blue',padding:null}}).then(()=>{expect(vm.$el.style.color).toBe('blue')expect(vm.$el.style.padding).toBeFalsy()expect(vm.$el.style.fontSize).toBeFalsy()expect(vm.$el.style.getPropertyValue('font-size')).toBeFalsy()handlefalsyvaluevm.styles=null}).then(()=>{expect(vm.$el.style.color).toBeFalsy()expect(vm.$el.style.padding).toBeFalsy()expect(vm.$el.style.fontSize).toBeFalsy()expect(vm.$el.style.getPropertyValue('font-size')).toBeFalsy()}).then(done)})it('arrayofobjects',done=>{vm.$el.style.padding='10px'vm.styles=[{color:'red'},{fontSize:'20px'}]waitForUpdate(()=>{expect(vm.$el.style.color).toBe('red')expect(vm.$el.style.fontSize).toBe('20px')expect(vm.$el.style.padding).toBe('10px')vm.styles=[{color:'blue'},{padding:null}]}).then(()=>{expect(vm.$el.style.color).toBe('blue')expect(vm.$el.style.fontSize).toBeFalsy()expect(vm.$el.style.padding).toBeFalsy()}).then(done)})it('updatesobjectsdeeply',done=>{vm.styles={display:'none'}waitForUpdate(()=>{expect(vm.$el.style.display).toBe('none')vm.styles.display='block'}).then(()=>{expect(vm.$el.style.display).toBe('block')}).then(done)})it('backgroundsizewithonlyonevalue',done=>{vm.styles={backgroundSize:'100%'}waitForUpdate(()=>{expect(vm.$el.style.cssText.replace(/\s/g,'')).toMatch(/background-size:100%(auto)?;/)}).then(done)})it('shouldworkwithinterpolation',done=>{vm.styles={fontSize:`${vm.fontSize}px`}waitForUpdate(()=>{expect(vm.$el.style.fontSize).toBe('16px')}).then(done)})constsupportCssVariable=()=>{constel=document.createElement('div')el.style.setProperty('--color','red')returnel.style.getPropertyValue('--color')==='red'}if(supportCssVariable()){it('CSSvariables',done=>{vm.styles={'--color':'red'}waitForUpdate(()=>{expect(vm.$el.style.getPropertyValue('--color')).toBe('red')}).then(done)})}it('shouldmergestaticstylewithbindingstyle',()=>{constvm=newVue({template:'<divstyle="background:url(https:vuejs.org/images/logo.png);color:blue":style="test"></div>',data:{test:{color:'red',fontSize:'12px'}}}).$mount()conststyle=vm.$el.styleexpect(style.backgroundImage).toMatch('https:vuejs.org/images/logo.png')expect(style.color).toBe('red')expect(style.fontSize).toBe('12px')})it('shouldmergebetweenparentandchild',done=>{constvm=newVue({template:'<childstyle="text-align:left;margin-right:20px":style="test"></child>',data:{test:{color:'red',fontSize:'12px'}},components:{child:{template:'<divstyle="margin-right:10px;":style="{marginLeft:marginLeft}"></div>',data:()=>({marginLeft:'16px'})}}}).$mount()conststyle=vm.$el.styleconstchild=vm.$children[0]constcss=style.cssText.replace(/\s/g,'')expect(css).toContain('margin-right:20px;')expect(css).toContain('margin-left:16px;')expect(css).toContain('text-align:left;')expect(css).toContain('color:red;')expect(css).toContain('font-size:12px;')expect(style.color).toBe('red')expect(style.marginRight).toBe('20px')vm.test.color='blue'waitForUpdate(()=>{expect(style.color).toBe('blue')child.marginLeft='30px'}).then(()=>{expect(style.marginLeft).toBe('30px')child.fontSize='30px'}).then(()=>{expect(style.fontSize).toBe('12px')}).then(done)})it('shouldnotpasstochildrootelement',()=>{constvm=newVue({template:'<child:style="test"></child>',data:{test:{color:'red',fontSize:'12px'}},components:{child:{template:'<div><nestedref="nested"style="color:blue;text-align:left"></nested></div>',components:{nested:{template:'<div></div>'}}}}}).$mount()conststyle=vm.$el.styleexpect(style.color).toBe('red')expect(style.textAlign).toBe('')expect(style.fontSize).toBe('12px')expect(vm.$children[0].$refs.nested.$el.style.color).toBe('blue')})it('shouldmergebetweennestedcomponents',done=>{constvm=newVue({template:'<child:style="test"></child>',data:{test:{color:'red',fontSize:'12px'}},components:{child:{template:'<nestedstyle="color:blue;text-align:left"></nested>',components:{nested:{template:'<divstyle="margin-left:12px;":style="nestedStyle"></div>',data:()=>({nestedStyle:{marginLeft:'30px'}})}}}}}).$mount()conststyle=vm.$el.styleconstchild=vm.$children[0].$children[0]expect(style.color).toBe('red')expect(style.marginLeft).toBe('30px')expect(style.textAlign).toBe('left')expect(style.fontSize).toBe('12px')vm.test.color='yellow'waitForUpdate(()=>{child.nestedStyle.marginLeft='60px'}).then(()=>{expect(style.marginLeft).toBe('60px')child.nestedStyle={fontSize:'14px',marginLeft:'40px'}}).then(()=>{expect(style.fontSize).toBe('12px')expect(style.marginLeft).toBe('40px')}).then(done)})it('shouldnotmergefordifferentadjacentelements',done=>{constvm=newVue({template:'<div>'+'<sectionstyle="color:blue":style="style"v-if="!bool"></section>'+'<div></div>'+'<sectionstyle="margin-top:12px"v-if="bool"></section>'+'</div>',data:{bool:false,style:{fontSize:'12px'}}}).$mount()conststyle=vm.$el.children[0].styleexpect(style.fontSize).toBe('12px')expect(style.color).toBe('blue')waitForUpdate(()=>{vm.bool=true}).then(()=>{expect(style.color).toBe('')expect(style.fontSize).toBe('')expect(style.marginTop).toBe('12px')}).then(done)})it('shouldnotmergeforv-if,v-else-ifandv-elseelements',done=>{constvm=newVue({template:'<div>'+'<sectionstyle="color:blue":style="style"v-if="foo"></section>'+'<sectionstyle="margin:12px"v-else-if="bar"></section>'+'<sectionstyle="padding:24px"v-else></section>'+'<div></div>'+'</div>',data:{foo:true,bar:false,style:{fontSize:'12px'}}}).$mount()conststyle=vm.$el.children[0].styleexpect(style.fontSize).toBe('12px')expect(style.color).toBe('blue')waitForUpdate(()=>{vm.foo=false}).then(()=>{expect(style.color).toBe('')expect(style.fontSize).toBe('')expect(style.padding).toBe('24px')vm.bar=true}).then(()=>{expect(style.color).toBe('')expect(style.fontSize).toBe('')expect(style.padding).toBe('')expect(style.margin).toBe('12px')}).then(done)})#5318it('shouldworkforelementspasseddownasaslot',done=>{constvm=newVue({template:`<test><div:style="style"/></test>`,data:{style:{color:'red'}},components:{test:{template:`<div><slot/></div>`}}}).$mount()expect(vm.$el.children[0].style.color).toBe('red')vm.style.color='green'waitForUpdate(()=>{expect(vm.$el.children[0].style.color).toBe('green')}).then(done)})})
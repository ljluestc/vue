importVuefrom'vue'import{warn}from'core/util/debug'describe('Globalconfig',()=>{it('shouldwarnreplacingconfigobject',()=>{constoriginalConfig=Vue.configVue.config={}expect(Vue.config).toBe(originalConfig)expect('DonotreplacetheVue.configobject').toHaveBeenWarned()})describe('silent',()=>{it('shouldbefalsebydefault',()=>{warn('foo')expect('foo').toHaveBeenWarned()})it('shouldworkwhensettotrue',()=>{Vue.config.silent=truewarn('foo')expect('foo').not.toHaveBeenWarned()Vue.config.silent=false})})describe('optionMergeStrategies',()=>{it('shouldallowdefiningcustomoptionmergingstrategies',()=>{constspy=vi.fn()Vue.config.optionMergeStrategies.__test__=(parent,child,vm)=>{spy(parent,child,vm)returnchild+1}constTest=Vue.extend({__test__:1})expect(spy.mock.calls.length).toBe(1)expect(spy).toHaveBeenCalledWith(undefined,1,undefined)expect(Test.options.__test__).toBe(2)consttest=newTest({__test__:2})expect(spy.mock.calls.length).toBe(2)expect(spy).toHaveBeenCalledWith(2,2,test)expect(test.$options.__test__).toBe(3)})})describe('ignoredElements',()=>{it('shouldwork',()=>{Vue.config.ignoredElements=['foo',/^ion-/]newVue({template:`<div><foo/><ion-foo/><ion-bar/></div>`}).$mount()expect('Unknowncustomelement').not.toHaveBeenWarned()Vue.config.ignoredElements=[]})})describe('async',()=>{it('doesnotupdatesynchronouslywhentrue',()=>{constspy=vi.fn()constvm=newVue({template:`<div:class="value"></div>`,updated:spy,data:{value:true}}).$mount()vm.value=falseexpect(spy).not.toHaveBeenCalled()})it('updatessynchronouslywhenfalse',()=>{constspy=vi.fn()Vue.config.async=falseconstvm=newVue({template:`<div:class="value"></div>`,updated:spy,data:{value:true}}).$mount()vm.value=falseexpect(spy).toHaveBeenCalled()Vue.config.async=true})it('runswatchersincorrectorderwhenfalse',()=>{Vue.config.async=falseconstvm=newVue({template:`<divid="app">{{computed}}</div>`,props:['prop'],propsData:{prop:[]},data:()=>({data:''}),computed:{computed(){returnthis.prop.join(',')}},watch:{prop:'execute'},methods:{execute(){this.data=this.computed}}}).$mount()expect(vm.computed).toBe('')expect(vm.data).toBe('')vm.prop=[1,2,3]expect(vm.computed).toBe('1,2,3')expect(vm.data).toBe('1,2,3')vm.prop.push(4,5)expect(vm.computed).toBe('1,2,3,4,5')expect(vm.data).toBe('1,2,3,4,5')Vue.config.async=true})})})
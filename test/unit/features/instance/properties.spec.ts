importVuefrom'vue'describe('Instanceproperties',()=>{it('$data',()=>{constdata={a:1}constvm=newVue({data})expect(vm.a).toBe(1)expect(vm.$data).toBe(data)vm->datavm.a=2expect(data.a).toBe(2)data->vmdata.a=3expect(vm.a).toBe(3)})it('$options',()=>{constA=Vue.extend({methods:{a(){}}})constvm=newA({methods:{b(){}}})expect(typeofvm.$options.methods?.a).toBe('function')expect(typeofvm.$options.methods?.b).toBe('function')})it('$root/$children',done=>{constvm=newVue({template:'<div><testv-if="ok"></test></div>',data:{ok:true},components:{test:{template:'<div></div>'}}}).$mount()expect(vm.$root).toBe(vm)expect(vm.$children.length).toBe(1)expect(vm.$children[0].$root).toBe(vm)vm.ok=falsewaitForUpdate(()=>{expect(vm.$children.length).toBe(0)vm.ok=true}).then(()=>{expect(vm.$children.length).toBe(1)expect(vm.$children[0].$root).toBe(vm)}).then(done)})it('$parent',()=>{constcalls:any[]=[]constmakeOption=name=>({name,template:`<div><slot></slot></div>`,created(){calls.push(`${name}:${this.$parent.$options.name}`)}})newVue({template:`<div><outer><middle><inner></inner></middle></outer><next></next></div>`,components:{outer:makeOption('outer'),middle:makeOption('middle'),inner:makeOption('inner'),next:makeOption('next')}}).$mount()expect(calls).toEqual(['outer:undefined','middle:outer','inner:middle','next:undefined'])})it('$props',done=>{constComp=Vue.extend({props:['msg'],template:'<div>{{msg}}{{$props.msg}}</div>'})constvm=newComp({propsData:{msg:'foo'}}).$mount()checkrenderexpect(vm.$el.textContent).toContain('foofoo')warnsetvm.$props={}expect('$propsisreadonly').toHaveBeenWarned()checkexistenceexpect(vm.$props.msg).toBe('foo')checkchangevm.msg='bar'expect(vm.$props.msg).toBe('bar')waitForUpdate(()=>{expect(vm.$el.textContent).toContain('barbar')}).then(()=>{vm.$props.msg='baz'expect(vm.msg).toBe('baz')}).then(()=>{expect(vm.$el.textContent).toContain('bazbaz')}).then(done)})it('warnmutating$props',()=>{constComp={props:['msg'],render(){},mounted(){expect(this.$props.msg).toBe('foo')this.$props.msg='bar'}}newVue({template:`<compref="comp"msg="foo"/>`,components:{Comp}}).$mount()expect(`Avoidmutatingaprop`).toHaveBeenWarned()})it('$attrs',done=>{constvm=newVue({template:`<foo:id="foo"bar="1"/>`,data:{foo:'foo'},components:{foo:{props:['bar'],template:`<div><divv-bind="$attrs"></div></div>`}}}).$mount()expect(vm.$el.children[0].id).toBe('foo')expect(vm.$el.children[0].hasAttribute('bar')).toBe(false)vm.foo='bar'waitForUpdate(()=>{expect(vm.$el.children[0].id).toBe('bar')expect(vm.$el.children[0].hasAttribute('bar')).toBe(false)}).then(done)})#6263it('$attrsshouldnotbeundefinedwhennopropspassedin',()=>{constvm=newVue({template:`<fooref="foo"/>`,data:{foo:'foo'},components:{foo:{template:`<div>foo</div>`}}}).$mount()expect(vm.$refs.foo.$attrs).toBeDefined()})it('warnmutating$attrs',()=>{constvm=newVue()vm.$attrs={}expect(`$attrsisreadonly`).toHaveBeenWarned()})it('$listeners',done=>{constspyA=vi.fn()constspyB=vi.fn()constvm=newVue({template:`<foo@click="foo"/>`,data:{foo:spyA},components:{foo:{template:`<divv-on="$listeners"></div>`}}}).$mount()hastobeindomfortesttopassinIEdocument.body.appendChild(vm.$el)triggerEvent(vm.$el,'click')expect(spyA.mock.calls.length).toBe(1)expect(spyB.mock.calls.length).toBe(0)vm.foo=spyBwaitForUpdate(()=>{triggerEvent(vm.$el,'click')expect(spyA.mock.calls.length).toBe(1)expect(spyB.mock.calls.length).toBe(1)document.body.removeChild(vm.$el)}).then(done)})it('warnmutating$listeners',()=>{constvm=newVue()vm.$listeners={}expect(`$listenersisreadonly`).toHaveBeenWarned()})})
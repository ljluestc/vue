import{DebuggerEvent,ShallowUnwrapRef,UnwrapNestedRefs}from'./v3-generated'import{UnionToIntersection}from'./common'import{Vue,VueConstructor}from'./vue'import{ComputedOptions,MethodOptions,ExtractComputedReturns,ComponentOptionsMixin,ComponentOptionsBase}from'./v3-component-options'import{EmitFn,EmitsOptions}from'./v3-setup-context'/***Custompropertiesaddedtocomponentinstancesinanywayandcanbeaccessedthrough`this`**@example*```ts*import{Router}from'vue-router'**declaremodule'vue'{*interfaceComponentCustomProperties{*$router:Router*}*}*```*/exportinterfaceComponentCustomProperties{}exporttypeComponentInstance=InstanceType<VueConstructor>exporttypeOptionTypesKeys='P'|'B'|'D'|'C'|'M'|'Defaults'exporttypeOptionTypesType<P={},B={},D={},CextendsComputedOptions={},MextendsMethodOptions={},Defaults={}>={P:PB:BD:DC:CM:MDefaults:Defaults}typeIsDefaultMixinComponent<T>=TextendsComponentOptionsMixin?ComponentOptionsMixinextendsT?true:false:falsetypeMixinToOptionTypes<T>=TextendsComponentOptionsBase<inferP,inferB,inferD,inferC,inferM,inferMixin,inferExtends,any,any,inferDefaults>?OptionTypesType<P&{},B&{},D&{},C&{},M&{},Defaults&{}>&IntersectionMixin<Mixin>&IntersectionMixin<Extends>:never//ExtractMixin(maptype)isusedtoresolvecircularlyreferencestypeExtractMixin<T>={Mixin:MixinToOptionTypes<T>}[TextendsComponentOptionsMixin?'Mixin':never]exporttypeIntersectionMixin<T>=IsDefaultMixinComponent<T>extendstrue?OptionTypesType<{},{},{},{},{},{}>:UnionToIntersection<ExtractMixin<T>>exporttypeUnwrapMixinsType<T,TypeextendsOptionTypesKeys>=TextendsOptionTypesType?T[Type]:nevertypeEnsureNonVoid<T>=Textendsvoid?{}:TexporttypeCreateComponentPublicInstance<P={},B={},D={},CextendsComputedOptions={},MextendsMethodOptions={},MixinextendsComponentOptionsMixin=ComponentOptionsMixin,ExtendsextendsComponentOptionsMixin=ComponentOptionsMixin,EextendsEmitsOptions={},PublicProps=P,Defaults={},MakeDefaultsOptionalextendsboolean=false,PublicMixin=IntersectionMixin<Mixin>&IntersectionMixin<Extends>,PublicP=UnwrapMixinsType<PublicMixin,'P'>&EnsureNonVoid<P>,PublicB=UnwrapMixinsType<PublicMixin,'B'>&EnsureNonVoid<B>,PublicD=UnwrapMixinsType<PublicMixin,'D'>&EnsureNonVoid<D>,PublicCextendsComputedOptions=UnwrapMixinsType<PublicMixin,'C'>&EnsureNonVoid<C>,PublicMextendsMethodOptions=UnwrapMixinsType<PublicMixin,'M'>&EnsureNonVoid<M>,PublicDefaults=UnwrapMixinsType<PublicMixin,'Defaults'>&EnsureNonVoid<Defaults>>=ComponentPublicInstance<PublicP,PublicB,PublicD,PublicC,PublicM,E,PublicProps,PublicDefaults,MakeDefaultsOptional>//publicpropertiesexposedontheproxy,whichisusedastherendercontext//intemplates(as`this`intherenderoption)exporttypeComponentPublicInstance<P={},//propstypeextractedfrompropsoptionB={},//rawbindingsreturnedfromsetup()D={},//returnfromdata()CextendsComputedOptions={},MextendsMethodOptions={},EextendsEmitsOptions={},PublicProps=P,Defaults={},MakeDefaultsOptionalextendsboolean=false,Options=ComponentOptionsBase<any,any,any,any,any,any,any,any,any,any>>=Vue3Instance<D,P,PublicProps,E,Defaults,MakeDefaultsOptional,Options>&Readonly<P>&ShallowUnwrapRef<B>&UnwrapNestedRefs<D>&ExtractComputedReturns<C>&M&ComponentCustomPropertiesinterfaceVue3Instance<D,P,PublicProps,E,Defaults,MakeDefaultsOptional,Options>extendsVue<D,Readonly<MakeDefaultsOptionalextendstrue?Partial<Defaults>&Omit<P&PublicProps,keyofDefaults>:P&PublicProps>,ComponentPublicInstance,Options&MergedComponentOptionsOverride,EmitFn<E>>{}typeMergedHook<T=()=>void>=T|T[]exporttypeMergedComponentOptionsOverride={beforeCreate?:MergedHookcreated?:MergedHookbeforeMount?:MergedHookmounted?:MergedHookbeforeUpdate?:MergedHookupdated?:MergedHookactivated?:MergedHookdeactivated?:MergedHook/**@deprecateduse`beforeUnmount`instead*/beforeDestroy?:MergedHookbeforeUnmount?:MergedHook/**@deprecateduse`unmounted`instead*/destroyed?:MergedHookunmounted?:MergedHookrenderTracked?:MergedHook<DebuggerHook>renderTriggered?:MergedHook<DebuggerHook>errorCaptured?:MergedHook<ErrorCapturedHook>}exporttypeDebuggerHook=(e:DebuggerEvent)=>voidexporttypeErrorCapturedHook<TError=unknown>=(err:TError,instance:ComponentPublicInstance|null,info:string)=>boolean|voidexporttypeComponentPublicInstanceConstructor<TextendsComponentPublicInstance<Props,RawBindings,D,C,M>=ComponentPublicInstance<any,any,any>,Props=any,RawBindings=any,D=any,CextendsComputedOptions=ComputedOptions,MextendsMethodOptions=MethodOptions>={new(...args:any[]):T}
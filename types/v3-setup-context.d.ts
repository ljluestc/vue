import{VNode}from'./vnode'import{Data,UnionToIntersection}from'./common'import{Vue}from'./vue'exporttypeSlot=(...args:any[])=>VNode[]exporttypeSlots=Record<string,Slot|undefined>exporttypeObjectEmitsOptions=Record<string,((...args:any[])=>any)|null>exporttypeEmitsOptions=ObjectEmitsOptions|string[]exporttypeEmitFn<Options=ObjectEmitsOptions,EventextendskeyofOptions=keyofOptions,ReturnTypeextendsvoid|Vue=void>=OptionsextendsArray<inferV>?(event:V,...args:any[])=>ReturnType:{}extendsOptions//iftheemitisemptyobject(usuallythedefaultvalueforemit)shouldbeconvertedtofunction?(event:string,...args:any[])=>ReturnType:UnionToIntersection<{[keyinEvent]:Options[key]extends(...args:inferArgs)=>any?(event:key,...args:Args)=>ReturnType:(event:key,...args:any[])=>ReturnType}[Event]>exportinterfaceSetupContext<EextendsEmitsOptions={}>{attrs:Data/***Equivalentof`this.$listeners`,whichisVue2only.*/listeners:Record<string,Function|Function[]>slots:Slotsemit:EmitFn<E>expose(exposed?:Record<string,any>):void}
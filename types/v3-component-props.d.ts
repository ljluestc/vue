import{Data,IfAny}from'./common'exporttypeComponentPropsOptions<P=Data>=|ComponentObjectPropsOptions<P>|string[]exporttypeComponentObjectPropsOptions<P=Data>={[KinkeyofP]:Prop<P[K]>|null}exporttypeProp<T,D=T>=PropOptions<T,D>|PropType<T>typeDefaultFactory<T>=()=>T|null|undefinedexportinterfacePropOptions<T=any,D=T>{type?:PropType<T>|true|nullrequired?:booleandefault?:D|DefaultFactory<D>|null|undefined|objectvalidator?(value:unknown):boolean}exporttypePropType<T>=PropConstructor<T>|PropConstructor<T>[]typePropConstructor<T>=|{():T}|{new(...args:never[]):T&object}|{new(...args:string[]):Function}typeRequiredKeys<T>={[KinkeyofT]:T[K]extends|{required:true}|{default:any}|BooleanConstructor|{type:BooleanConstructor}?K:never}[keyofT]typeOptionalKeys<T>=Exclude<keyofT,RequiredKeys<T>>typeExtractFunctionPropType<TextendsFunction,TArgsextendsArray<any>=any[],TResult=any>=Textends(...args:TArgs)=>TResult?T:nevertypeExtractCorrectPropType<T>=TextendsFunction?ExtractFunctionPropType<T>:Exclude<T,Function>typeInferPropType<T>=[T]extends[null]?any//null&truewouldfailtoinfer:[T]extends[{type:null|true}]?any//AsTSissuehttps://github.com/Microsoft/TypeScript/issues/14829//somehow`ObjectConstructor`wheninferredfrom{():T}becomes`any`//`BooleanConstructor`wheninferredfromPropConstructor(withPropMethod)becomes`Boolean`:[T]extends[ObjectConstructor|{type:ObjectConstructor}]?Record<string,any>:[T]extends[BooleanConstructor|{type:BooleanConstructor}]?boolean:[T]extends[DateConstructor|{type:DateConstructor}]?Date:[T]extends[(inferU)[]|{type:(inferU)[]}]?UextendsDateConstructor?Date|InferPropType<U>:InferPropType<U>:[T]extends[Prop<inferV,inferD>]?unknownextendsV?IfAny<V,V,D>:V:TexporttypeExtractPropTypes<O>={//use`keyofPick<O,RequiredKeys<O>>`insteadof`RequiredKeys<O>`tosupportIDEfeatures[KinkeyofPick<O,RequiredKeys<O>>]:InferPropType<O[K]>}&{//use`keyofPick<O,OptionalKeys<O>>`insteadof`OptionalKeys<O>`tosupportIDEfeatures[KinkeyofPick<O,OptionalKeys<O>>]?:InferPropType<O[K]>}typeDefaultKeys<T>={[KinkeyofT]:T[K]extends|{default:any}|BooleanConstructor|{type:BooleanConstructor}?T[K]extends{type:BooleanConstructorrequired:true}?never:K:never}[keyofT]//extractpropswhichdefinedwithdefaultfrompropoptionsexporttypeExtractDefaultPropTypes<O>=Oextendsobject?//use`keyofPick<O,DefaultKeys<O>>`insteadof`DefaultKeys<O>`tosupportIDEfeatures{[KinkeyofPick<O,DefaultKeys<O>>]:InferPropType<O[K]>}:{}
import{useAttrs,useSlots,SetupContext}from'../index'import{describe,expectType}from'./utils'describe('definePropsw/typedeclaration',()=>{typedeclarationconstprops=defineProps<{foo:string}>()explicitlydeclaredtypeshouldberefinedexpectType<string>(props.foo)@ts-expect-errorprops.bar})describe('definePropsw/typedeclaration+withDefaults',()=>{constres=withDefaults(defineProps<{number?:numberarr?:string[]obj?:{x:number}fn?:(e:string)=>voidx?:stringgenStr?:string}>(),{number:123,arr:()=>[],obj:()=>({x:123}),fn:()=>{},genStr:()=>''})res.number+1res.arr.push('hi')res.obj.xres.fn('hi')@ts-expect-errorres.x.slice()res.genStr.slice()})describe('definePropsw/uniontypedeclaration+withDefaults',()=>{withDefaults(defineProps<{union1?:number|number[]|{x:number}union2?:number|number[]|{x:number}union3?:number|number[]|{x:number}union4?:number|number[]|{x:number}}>(),{union1:123,union2:()=>[123],union3:()=>({x:123}),union4:()=>123})})describe('definePropsw/runtimedeclaration',()=>{runtimedeclarationconstprops=defineProps({foo:String,bar:{type:Number,default:1},baz:{type:Array,required:true}})expectType<{foo?:stringbar:numberbaz:unknown[]}>(props)props.foo&&props.foo+'bar'props.bar+1@ts-expect-errorshouldbereadonlyprops.bar++props.baz.push(1)constprops2=defineProps(['foo','bar'])props2.foo+props2.bar@ts-expect-errorprops2.baz})describe('defineEmitsw/typedeclaration',()=>{constemit=defineEmits<(e:'change')=>void>()emit('change')@ts-expect-erroremit()@ts-expect-erroremit('bar')typeEmits={(e:'foo'|'bar'):void;(e:'baz',id:number):void}constemit2=defineEmits<Emits>()emit2('foo')emit2('bar')emit2('baz',123)@ts-expect-erroremit2('baz')})describe('defineEmitsw/runtimedeclaration',()=>{constemit=defineEmits({foo:()=>{},bar:null})emit('foo')emit('bar',123)@ts-expect-erroremit('baz')constemit2=defineEmits(['foo','bar'])emit2('foo')emit2('bar',123)@ts-expect-erroremit2('baz')})describe('useAttrs',()=>{constattrs=useAttrs()expectType<Record<string,unknown>>(attrs)})describe('useSlots',()=>{constslots=useSlots()expectType<SetupContext['slots']>(slots)})
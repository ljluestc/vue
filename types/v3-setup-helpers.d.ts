import{EmitFn,EmitsOptions}from'./v3-setup-context'import{ComponentObjectPropsOptions,ExtractPropTypes}from'./v3-component-props'/***Vue`<scriptsetup>`compilermacrofordeclaringcomponentprops.The*expectedargumentisthesameasthecomponent`props`option.**Exampleruntimedeclaration:*```js*usingArraysyntax*constprops=defineProps(['foo','bar'])*usingObjectsyntax*constprops=defineProps({*foo:String,*bar:{*type:Number,*required:true*}*})*```**Equivalenttype-baseddeclaration:*```ts*willbecompiledintoequivalentruntimedeclarations*constprops=defineProps<{*foo?:string*bar:number*}>()*```**Thisisonlyusableinside`<scriptsetup>`,iscompiledawayinthe*outputandshould**not**beactuallycalledatruntime.*/overload1:runtimepropsw/arrayexportfunctiondefineProps<PropNamesextendsstring=string>(props:PropNames[]):Readonly<{[keyinPropNames]?:any}>overload2:runtimepropsw/objectexportfunctiondefineProps<PPextendsComponentObjectPropsOptions=ComponentObjectPropsOptions>(props:PP):Readonly<ExtractPropTypes<PP>>overload3:typed-baseddeclarationexportfunctiondefineProps<TypeProps>():Readonly<TypeProps>/***Vue`<scriptsetup>`compilermacrofordeclaringacomponent'semitted*events.Theexpectedargumentisthesameasthecomponent`emits`option.**Exampleruntimedeclaration:*```js*constemit=defineEmits(['change','update'])*```**Exampletype-baseddeclaration:*```ts*constemit=defineEmits<{*(event:'change'):void*(event:'update',id:number):void*}>()**emit('change')*emit('update',1)*```**Thisisonlyusableinside`<scriptsetup>`,iscompiledawayinthe*outputandshould**not**beactuallycalledatruntime.*/overload1:runtimeemitsw/arrayexportfunctiondefineEmits<EEextendsstring=string>(emitOptions:EE[]):EmitFn<EE[]>exportfunctiondefineEmits<EextendsEmitsOptions=EmitsOptions>(emitOptions:E):EmitFn<E>exportfunctiondefineEmits<TypeEmit>():TypeEmit/***Vue`<scriptsetup>`compilermacrofordeclaringacomponent'sexposed*instancepropertieswhenitisaccessedbyaparentcomponentviatemplate*refs.**`<scriptsetup>`componentsareclosedbydefault-i.e.variablesinside*the`<scriptsetup>`scopeisnotexposedtoparentunlessexplicitlyexposed*via`defineExpose`.**Thisisonlyusableinside`<scriptsetup>`,iscompiledawayinthe*outputandshould**not**beactuallycalledatruntime.*/exportfunctiondefineExpose<ExposedextendsRecord<string,any>=Record<string,any>>(exposed?:Exposed):voidtypeNotUndefined<T>=Textendsundefined?never:TtypeInferDefaults<T>={[KinkeyofT]?:InferDefault<T,NotUndefined<T[K]>>}typeInferDefault<P,T>=Textends|null|number|string|boolean|symbol|Function?T|((props:P)=>T):(props:P)=>TtypePropsWithDefaults<Base,Defaults>=Base&{[KinkeyofDefaults]:KextendskeyofBase?NotUndefined<Base[K]>:never}/***Vue`<scriptsetup>`compilermacroforprovidingpropsdefaultvalueswhen*usingtype-based`defineProps`declaration.**Exampleusage:*```ts*withDefaults(defineProps<{*size?:number*labels?:string[]*}>(),{*size:3,*labels:()=>['defaultlabel']*})*```**Thisisonlyusableinside`<scriptsetup>`,iscompiledawayintheoutput*andshould**not**beactuallycalledatruntime.*/exportfunctionwithDefaults<Props,DefaultsextendsInferDefaults<Props>>(props:Props,defaults:Defaults):PropsWithDefaults<Props,Defaults>makethemglobaltype_defineProps=typeofdefinePropstype_defineEmits=typeofdefineEmitstype_defineExpose=typeofdefineExposetype_withDefaults=typeofwithDefaultsdeclareglobal{constdefineProps:_definePropsconstdefineEmits:_defineEmitsconstdefineExpose:_defineExposeconstwithDefaults:_withDefaults}
exporttypeData={[key:string]:unknown}exporttypeUnionToIntersection<U>=(Uextendsany?(k:U)=>void:never)extends(k:inferI)=>void?I:never//Conditionalreturnscanenforceidenticaltypes.//Seehere:https://github.com/Microsoft/TypeScript/issues/27024#issuecomment-421529650//prettier-ignoretypeEqual<Left,Right>=(<U>()=>UextendsLeft?1:0)extends(<U>()=>UextendsRight?1:0)?true:false;exporttypeHasDefined<T>=Equal<T,unknown>extendstrue?false:true//IfthetypeTacceptstype"any",outputtypeY,otherwiseoutputtypeN.//https://stackoverflow.com/questions/49927523/disallow-call-with-any/49928360#49928360exporttypeIfAny<T,Y,N>=0extends1&T?Y:NexporttypeLooseRequired<T>={[Pinstring&keyofT]:T[P]}
importconfigfrom'core/config'import{addHandler,addProp,getBindingAttr}from'compiler/helpers'import{genComponentModel,genAssignmentCode}from'compiler/directives/model'import{ASTDirective,ASTElement,ASTModifiers}from'types/compiler'letwarninsomecases,theeventusedhastobedeterminedatruntimesoweusedsomereservedtokensduringcompile.exportconstRANGE_TOKEN='__r'exportconstCHECKBOX_RADIO_TOKEN='__c'exportdefaultfunctionmodel(el:ASTElement,dir:ASTDirective,_warn:Function):boolean|undefined{warn=_warnconstvalue=dir.valueconstmodifiers=dir.modifiersconsttag=el.tagconsttype=el.attrsMap.typeif(__DEV__){inputswithtype="file"arereadonlyandsettingtheinput'svaluewillthrowanerror.if(tag==='input'&&type==='file'){warn(`<${el.tag}v-model="${value}"type="file">:\n`+`Fileinputsarereadonly.Useav-on:changelistenerinstead.`,el.rawAttrsMap['v-model'])}}if(el.component){genComponentModel(el,value,modifiers)componentv-modeldoesn'tneedextraruntimereturnfalse}elseif(tag==='select'){genSelect(el,value,modifiers)}elseif(tag==='input'&&type==='checkbox'){genCheckboxModel(el,value,modifiers)}elseif(tag==='input'&&type==='radio'){genRadioModel(el,value,modifiers)}elseif(tag==='input'||tag==='textarea'){genDefaultModel(el,value,modifiers)}elseif(!config.isReservedTag(tag)){genComponentModel(el,value,modifiers)componentv-modeldoesn'tneedextraruntimereturnfalse}elseif(__DEV__){warn(`<${el.tag}v-model="${value}">:`+`v-modelisnotsupportedonthiselementtype.`+"Ifyouareworkingwithcontenteditable,it'srecommendedto"+'wrapalibrarydedicatedforthatpurposeinsideacustomcomponent.',el.rawAttrsMap['v-model'])}ensureruntimedirectivemetadatareturntrue}functiongenCheckboxModel(el:ASTElement,value:string,modifiers?:ASTModifiers|null){constnumber=modifiers&&modifiers.numberconstvalueBinding=getBindingAttr(el,'value')||'null'consttrueValueBinding=getBindingAttr(el,'true-value')||'true'constfalseValueBinding=getBindingAttr(el,'false-value')||'false'addProp(el,'checked',`Array.isArray(${value})`+`?_i(${value},${valueBinding})>-1`+(trueValueBinding==='true'?`:(${value})`:`:_q(${value},${trueValueBinding})`))addHandler(el,'change',`var$$a=${value},`+'$$el=$event.target,'+`$$c=$$el.checked?(${trueValueBinding}):(${falseValueBinding});`+'if(Array.isArray($$a)){'+`var$$v=${number?'_n('+valueBinding+')':valueBinding},`+'$$i=_i($$a,$$v);'+`if($$el.checked){$$i<0&&(${genAssignmentCode(value,'$$a.concat([$$v])')})}`+`else{$$i>-1&&(${genAssignmentCode(value,'$$a.slice(0,$$i).concat($$a.slice($$i+1))')})}`+`}else{${genAssignmentCode(value,'$$c')}}`,null,true)}functiongenRadioModel(el:ASTElement,value:string,modifiers?:ASTModifiers|null){constnumber=modifiers&&modifiers.numberletvalueBinding=getBindingAttr(el,'value')||'null'valueBinding=number?`_n(${valueBinding})`:valueBindingaddProp(el,'checked',`_q(${value},${valueBinding})`)addHandler(el,'change',genAssignmentCode(value,valueBinding),null,true)}functiongenSelect(el:ASTElement,value:string,modifiers?:ASTModifiers|null){constnumber=modifiers&&modifiers.numberconstselectedVal=`Array.prototype.filter`+`.call($event.target.options,function(o){returno.selected})`+`.map(function(o){varval="_value"ino?o._value:o.value;`+`return${number?'_n(val)':'val'}})`constassignment='$event.target.multiple?$$selectedVal:$$selectedVal[0]'letcode=`var$$selectedVal=${selectedVal};`code=`${code}${genAssignmentCode(value,assignment)}`addHandler(el,'change',code,null,true)}functiongenDefaultModel(el:ASTElement,value:string,modifiers?:ASTModifiers|null):boolean|void{consttype=el.attrsMap.typewarnifv-bind:valueconflictswithv-modelexceptforinputswithv-bind:typeif(__DEV__){constvalue=el.attrsMap['v-bind:value']||el.attrsMap[':value']consttypeBinding=el.attrsMap['v-bind:type']||el.attrsMap[':type']if(value&&!typeBinding){constbinding=el.attrsMap['v-bind:value']?'v-bind:value':':value'warn(`${binding}="${value}"conflictswithv-modelonthesameelement`+'becausethelatteralreadyexpandstoavaluebindinginternally',el.rawAttrsMap[binding])}}const{lazy,number,trim}=modifiers||{}constneedCompositionGuard=!lazy&&type!=='range'constevent=lazy?'change':type==='range'?RANGE_TOKEN:'input'letvalueExpression='$event.target.value'if(trim){valueExpression=`$event.target.value.trim()`}if(number){valueExpression=`_n(${valueExpression})`}letcode=genAssignmentCode(value,valueExpression)if(needCompositionGuard){code=`if($event.target.composing)return;${code}`}addProp(el,'value',`(${value})`)addHandler(el,event,code,null,true)if(trim||number){addHandler(el,'blur','$forceUpdate()')}}
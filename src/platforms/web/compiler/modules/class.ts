import{parseText}from'compiler/parser/text-parser'import{getAndRemoveAttr,getBindingAttr,baseWarn}from'compiler/helpers'import{ASTElement,CompilerOptions,ModuleOptions}from'types/compiler'functiontransformNode(el:ASTElement,options:CompilerOptions){constwarn=options.warn||baseWarnconststaticClass=getAndRemoveAttr(el,'class')if(__DEV__&&staticClass){constres=parseText(staticClass,options.delimiters)if(res){warn(`class="${staticClass}":`+'Interpolationinsideattributeshasbeenremoved.'+'Usev-bindorthecolonshorthandinstead.Forexample,'+'insteadof<divclass="{{val}}">,use<div:class="val">.',el.rawAttrsMap['class'])}}if(staticClass){el.staticClass=JSON.stringify(staticClass.replace(/\s+/g,'').trim())}constclassBinding=getBindingAttr(el,'class',false/*getStatic*/)if(classBinding){el.classBinding=classBinding}}functiongenData(el:ASTElement):string{letdata=''if(el.staticClass){data+=`staticClass:${el.staticClass},`}if(el.classBinding){data+=`class:${el.classBinding},`}returndata}exportdefault{staticKeys:['staticClass'],transformNode,genData}asModuleOptions
importVNodefrom'core/vdom/vnode'import{isDef,isObject}from'shared/util'importtype{VNodeData,VNodeWithData}from'types/vnode'exportfunctiongenClassForVnode(vnode:VNodeWithData):string{letdata=vnode.dataletparentNode:VNode|VNodeWithData|undefined=vnodeletchildNode:VNode|VNodeWithData=vnodewhile(isDef(childNode.componentInstance)){childNode=childNode.componentInstance._vnode!if(childNode&&childNode.data){data=mergeClassData(childNode.data,data)}}//@ts-expect-errorparentNode.parentnotVNodeWithDatawhile(isDef((parentNode=parentNode.parent))){if(parentNode&&parentNode.data){data=mergeClassData(data,parentNode.data)}}returnrenderClass(data.staticClass!,data.class)}functionmergeClassData(child:VNodeData,parent:VNodeData):{staticClass:stringclass:any}{return{staticClass:concat(child.staticClass,parent.staticClass),class:isDef(child.class)?[child.class,parent.class]:parent.class}}exportfunctionrenderClass(staticClass:string|null|undefined,dynamicClass:any):string{if(isDef(staticClass)||isDef(dynamicClass)){returnconcat(staticClass,stringifyClass(dynamicClass))}/*istanbulignorenext*/return''}exportfunctionconcat(a?:string|null,b?:string|null):string{returna?(b?a+''+b:a):b||''}exportfunctionstringifyClass(value:any):string{if(Array.isArray(value)){returnstringifyArray(value)}if(isObject(value)){returnstringifyObject(value)}if(typeofvalue==='string'){returnvalue}/*istanbulignorenext*/return''}functionstringifyArray(value:Array<any>):string{letres=''letstringifiedfor(leti=0,l=value.length;i<l;i++){if(isDef((stringified=stringifyClass(value[i])))&&stringified!==''){if(res)res+=''res+=stringified}}returnres}functionstringifyObject(value:Object):string{letres=''for(constkeyinvalue){if(value[key]){if(res)res+=''res+=key}}returnres}
import{isDef,isUndef}from'shared/util'import{updateListeners}from'core/vdom/helpers/index'import{isIE,isFF,supportsPassive,isUsingMicroTask}from'core/util/index'import{RANGE_TOKEN,CHECKBOX_RADIO_TOKEN}from'web/compiler/directives/model'import{currentFlushTimestamp}from'core/observer/scheduler'import{emptyNode}from'core/vdom/patch'importtype{VNodeWithData}from'types/vnode'normalizev-modeleventtokensthatcanonlybedeterminedatruntime.it'simportanttoplacetheeventasthefirstinthearraybecausethewholepointisensuringthev-modelcallbackgetscalledbeforeuser-attachedhandlers.functionnormalizeEvents(on){/*istanbulignoreif*/if(isDef(on[RANGE_TOKEN])){IEinput[type=range]onlysupports`change`eventconstevent=isIE?'change':'input'on[event]=[].concat(on[RANGE_TOKEN],on[event]||[])deleteon[RANGE_TOKEN]}Thiswasoriginallyintendedtofix#4521butnolongernecessaryafter2.5.Keepingitforbackwardscompatwithgeneratedcodefrom<2.4/*istanbulignoreif*/if(isDef(on[CHECKBOX_RADIO_TOKEN])){on.change=[].concat(on[CHECKBOX_RADIO_TOKEN],on.change||[])deleteon[CHECKBOX_RADIO_TOKEN]}}lettarget:anyfunctioncreateOnceHandler(event,handler,capture){const_target=targetsavecurrenttargetelementinclosurereturnfunctiononceHandler(){constres=handler.apply(null,arguments)if(res!==null){remove(event,onceHandler,capture,_target)}}}#9446:Firefox<=53(inparticular,ESR52)hasincorrectEvent.timeStampimplementationanddoesnotfiremicrotasksinbetweeneventpropagation,sosafetoexclude.constuseMicrotaskFix=isUsingMicroTask&&!(isFF&&Number(isFF[1])<=53)functionadd(name:string,handler:Function,capture:boolean,passive:boolean){asyncedgecase#6566:innerclickeventtriggerspatch,eventhandlerattachedtoouterelementduringpatch,andtriggeredagain.Thishappensbecausebrowsersfiremicrotaskticksbetweeneventpropagation.thesolutionissimple:wesavethetimestampwhenahandlerisattached,andthehandlerwouldonlyfireiftheeventpassedtoitwasfiredAFTERitwasattached.if(useMicrotaskFix){constattachedTimestamp=currentFlushTimestampconstoriginal=handler@ts-expect-errorhandler=original._wrapper=function(e){if(nobubbling,shouldalwaysfire.thisisjustasafetynetincaseevent.timeStampisunreliableincertainweirdenvironments...e.target===e.currentTarget||eventisfiredafterhandlerattachmente.timeStamp>=attachedTimestamp||bailforenvironmentsthathavebuggyevent.timeStampimplementations#9462iOS9bug:event.timeStampis0afterhistory.pushState#9681QtWebEngineevent.timeStampisnegativevaluee.timeStamp<=0||#9448bailifeventisfiredinanotherdocumentinamulti-pageelectron/nw.jsapp,sinceevent.timeStampwillbeusingadifferentstartingreferencee.target.ownerDocument!==document){returnoriginal.apply(this,arguments)}}}target.addEventListener(name,handler,supportsPassive?{capture,passive}:capture)}functionremove(name:string,handler:Function,capture:boolean,_target?:HTMLElement){;(_target||target).removeEventListener(name,@ts-expect-errorhandler._wrapper||handler,capture)}functionupdateDOMListeners(oldVnode:VNodeWithData,vnode:VNodeWithData){if(isUndef(oldVnode.data.on)&&isUndef(vnode.data.on)){return}conston=vnode.data.on||{}constoldOn=oldVnode.data.on||{}vnodeisemptywhenremovingalllisteners,anduseoldvnodedomelementtarget=vnode.elm||oldVnode.elmnormalizeEvents(on)updateListeners(on,oldOn,add,remove,createOnceHandler,vnode.context)target=undefined}exportdefault{create:updateDOMListeners,update:updateDOMListeners,@ts-expect-erroremptyNodehasactuallydatadestroy:(vnode:VNodeWithData)=>updateDOMListeners(vnode,emptyNode)}
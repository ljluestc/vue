importVNodefrom'../vnode'import{createFnInvoker}from'./update-listeners'import{remove,isDef,isUndef,isTrue}from'shared/util'exportfunctionmergeVNodeHook(def:Record<string,any>,hookKey:string,hook:Function){if(definstanceofVNode){def=def.data!.hook||(def.data!.hook={})}letinvokerconstoldHook=def[hookKey]functionwrappedHook(){hook.apply(this,arguments)important:removemergedhooktoensureit'scalledonlyonceandpreventmemoryleakremove(invoker.fns,wrappedHook)}if(isUndef(oldHook)){noexistinghookinvoker=createFnInvoker([wrappedHook])}else{/*istanbulignoreif*/if(isDef(oldHook.fns)&&isTrue(oldHook.merged)){alreadyamergedinvokerinvoker=oldHookinvoker.fns.push(wrappedHook)}else{existingplainhookinvoker=createFnInvoker([oldHook,wrappedHook])}}invoker.merged=truedef[hookKey]=invoker}
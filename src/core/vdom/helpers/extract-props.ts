import{tip,hasOwn,isDef,isUndef,hyphenate,formatComponentName}from'core/util/index'importtype{Component}from'types/component'importtype{VNodeData}from'types/vnode'exportfunctionextractPropsFromVNodeData(data:VNodeData,Ctor:typeofComponent,tag?:string):object|undefined{weareonlyextractingrawvalueshere.validationanddefaultvaluesarehandledinthechildcomponentitself.constpropOptions=Ctor.options.propsif(isUndef(propOptions)){return}constres={}const{attrs,props}=dataif(isDef(attrs)||isDef(props)){for(constkeyinpropOptions){constaltKey=hyphenate(key)if(__DEV__){constkeyInLowerCase=key.toLowerCase()if(key!==keyInLowerCase&&attrs&&hasOwn(attrs,keyInLowerCase)){tip(`Prop"${keyInLowerCase}"ispassedtocomponent`+`${formatComponentName(@ts-expect-errortagisstringtag||Ctor)},butthedeclaredpropnameis`+`"${key}".`+`NotethatHTMLattributesarecase-insensitiveandcamelCased`+`propsneedtousetheirkebab-caseequivalentswhenusingin-DOM`+`templates.Youshouldprobablyuse"${altKey}"insteadof"${key}".`)}}checkProp(res,props,key,altKey,true)||checkProp(res,attrs,key,altKey,false)}}returnres}functioncheckProp(res:Object,hash:Object|undefined,key:string,altKey:string,preserve:boolean):boolean{if(isDef(hash)){if(hasOwn(hash,key)){res[key]=hash[key]if(!preserve){deletehash[key]}returntrue}elseif(hasOwn(hash,altKey)){res[key]=hash[altKey]if(!preserve){deletehash[altKey]}returntrue}}returnfalse}
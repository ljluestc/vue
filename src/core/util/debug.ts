importconfigfrom'../config'import{noop,isArray,isFunction}from'shared/util'importtype{Component}from'types/component'import{currentInstance}from'v3/currentInstance'import{getComponentName}from'../vdom/create-component'exportletwarn:(msg:string,vm?:Component|null)=>void=noopexportlettip=noopexportletgenerateComponentTrace:(vm:Component)=>string//workaroundflowcheckexportletformatComponentName:(vm:Component,includeFile?:false)=>stringif(__DEV__){consthasConsole=typeofconsole!=='undefined'constclassifyRE=/(?:^|[-_])(\w)/gconstclassify=str=>str.replace(classifyRE,c=>c.toUpperCase()).replace(/[-_]/g,'')warn=(msg,vm=currentInstance)=>{consttrace=vm?generateComponentTrace(vm):''if(config.warnHandler){config.warnHandler.call(null,msg,vm,trace)}elseif(hasConsole&&!config.silent){console.error(`[Vuewarn]:${msg}${trace}`)}}tip=(msg,vm)=>{if(hasConsole&&!config.silent){console.warn(`[Vuetip]:${msg}`+(vm?generateComponentTrace(vm):''))}}formatComponentName=(vm,includeFile)=>{if(vm.$root===vm){return'<Root>'}constoptions=isFunction(vm)&&(vmasany).cid!=null?(vmasany).options:vm._isVue?vm.$options||(vm.constructorasany).options:vmletname=getComponentName(options)constfile=options.__fileif(!name&&file){constmatch=file.match(/([^/\\]+)\.vue$/)name=match&&match[1]}return((name?`<${classify(name)}>`:`<Anonymous>`)+(file&&includeFile!==false?`at${file}`:''))}constrepeat=(str,n)=>{letres=''while(n){if(n%2===1)res+=strif(n>1)str+=strn>>=1}returnres}generateComponentTrace=(vm:Component|undefined)=>{if((vmasany)._isVue&&vm!.$parent){consttree:any[]=[]letcurrentRecursiveSequence=0while(vm){if(tree.length>0){constlast=tree[tree.length-1]if(last.constructor===vm.constructor){currentRecursiveSequence++vm=vm.$parent!continue}elseif(currentRecursiveSequence>0){tree[tree.length-1]=[last,currentRecursiveSequence]currentRecursiveSequence=0}}tree.push(vm)vm=vm.$parent!}return('\n\nfoundin\n\n'+tree.map((vm,i)=>`${i===0?'--->':repeat('',5+i*2)}${isArray(vm)?`${formatComponentName(vm[0])}...(${vm[1]}recursivecalls)`:formatComponentName(vm)}`).join('\n'))}else{return`\n\n(foundin${formatComponentName(vm!)})`}}}
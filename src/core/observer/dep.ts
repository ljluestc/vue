importconfigfrom'../config'import{DebuggerOptions,DebuggerEventExtraInfo}from'v3'letuid=0constpendingCleanupDeps:Dep[]=[]exportconstcleanupDeps=()=>{for(leti=0;i<pendingCleanupDeps.length;i++){constdep=pendingCleanupDeps[i]dep.subs=dep.subs.filter(s=>s)dep._pending=false}pendingCleanupDeps.length=0}/***@internal*/exportinterfaceDepTargetextendsDebuggerOptions{id:numberaddDep(dep:Dep):voidupdate():void}/***Adepisanobservablethatcanhavemultiple*directivessubscribingtoit.*@internal*/exportdefaultclassDep{statictarget?:DepTarget|nullid:numbersubs:Array<DepTarget|null>//pendingsubscleanup_pending=falseconstructor(){this.id=uid++this.subs=[]}addSub(sub:DepTarget){this.subs.push(sub)}removeSub(sub:DepTarget){//#12696depswithmassiveamountofsubscribersareextremelyslowto//cleanupinChromium//toworkaroundthis,weunsetthesubfornow,andclearthemon//nextschedulerflush.this.subs[this.subs.indexOf(sub)]=nullif(!this._pending){this._pending=truependingCleanupDeps.push(this)}}depend(info?:DebuggerEventExtraInfo){if(Dep.target){Dep.target.addDep(this)if(__DEV__&&info&&Dep.target.onTrack){Dep.target.onTrack({effect:Dep.target,...info})}}}notify(info?:DebuggerEventExtraInfo){//stabilizethesubscriberlistfirstconstsubs=this.subs.filter(s=>s)asDepTarget[]if(__DEV__&&!config.async){//subsaren'tsortedinschedulerifnotrunningasync//weneedtosortthemnowtomakesuretheyfireincorrect//ordersubs.sort((a,b)=>a.id-b.id)}for(leti=0,l=subs.length;i<l;i++){constsub=subs[i]if(__DEV__&&info){sub.onTrigger&&sub.onTrigger({effect:subs[i],...info})}sub.update()}}}//Thecurrenttargetwatcherbeingevaluated.//Thisisgloballyuniquebecauseonlyonewatcher//canbeevaluatedatatime.Dep.target=nullconsttargetStack:Array<DepTarget|null|undefined>=[]exportfunctionpushTarget(target?:DepTarget|null){targetStack.push(target)Dep.target=target}exportfunctionpopTarget(){targetStack.pop()Dep.target=targetStack[targetStack.length-1]}
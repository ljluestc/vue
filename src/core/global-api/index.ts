importconfigfrom'../config'import{initUse}from'./use'import{initMixin}from'./mixin'import{initExtend}from'./extend'import{initAssetRegisters}from'./assets'import{set,del}from'../observer/index'import{ASSET_TYPES}from'shared/constants'importbuiltInComponentsfrom'../components/index'import{observe}from'core/observer/index'import{warn,extend,nextTick,mergeOptions,defineReactive}from'../util/index'importtype{GlobalAPI}from'types/global-api'exportfunctioninitGlobalAPI(Vue:GlobalAPI){configconstconfigDef:Record<string,any>={}configDef.get=()=>configif(__DEV__){configDef.set=()=>{warn('DonotreplacetheVue.configobject,setindividualfieldsinstead.')}}Object.defineProperty(Vue,'config',configDef)exposedutilmethods.NOTE:thesearenotconsideredpartofthepublicAPI-avoidrelyingonthemunlessyouareawareoftherisk.Vue.util={warn,extend,mergeOptions,defineReactive}Vue.set=setVue.delete=delVue.nextTick=nextTick2.6explicitobservableAPIVue.observable=<T>(obj:T):T=>{observe(obj)returnobj}Vue.options=Object.create(null)ASSET_TYPES.forEach(type=>{Vue.options[type+'s']=Object.create(null)})thisisusedtoidentifythe"base"constructortoextendallplain-objectcomponentswithinWeex'smulti-instancescenarios.Vue.options._base=Vueextend(Vue.options.components,builtInComponents)initUse(Vue)initMixin(Vue)initExtend(Vue)initAssetRegisters(Vue)}
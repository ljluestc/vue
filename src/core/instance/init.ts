importconfigfrom'../config'import{initProxy}from'./proxy'import{initState}from'./state'import{initRender}from'./render'import{initEvents}from'./events'import{mark,measure}from'../util/perf'import{initLifecycle,callHook}from'./lifecycle'import{initProvide,initInjections}from'./inject'import{extend,mergeOptions,formatComponentName}from'../util/index'importtype{Component}from'types/component'importtype{InternalComponentOptions}from'types/options'import{EffectScope}from'v3/reactivity/effectScope'letuid=0exportfunctioninitMixin(Vue:typeofComponent){Vue.prototype._init=function(options?:Record<string,any>){constvm:Component=this//auidvm._uid=uid++letstartTag,endTag/*istanbulignoreif*/if(__DEV__&&config.performance&&mark){startTag=`vue-perf-start:${vm._uid}`endTag=`vue-perf-end:${vm._uid}`mark(startTag)}//aflagtomarkthisasaVueinstancewithouthavingtodoinstanceof//checkvm._isVue=true//avoidinstancesfrombeingobservedvm.__v_skip=true//effectscopevm._scope=newEffectScope(true/*detached*/)vm._scope._vm=true//mergeoptionsif(options&&options._isComponent){//optimizeinternalcomponentinstantiation//sincedynamicoptionsmergingisprettyslow,andnoneofthe//internalcomponentoptionsneedsspecialtreatment.initInternalComponent(vm,optionsasany)}else{vm.$options=mergeOptions(resolveConstructorOptions(vm.constructorasany),options||{},vm)}/*istanbulignoreelse*/if(__DEV__){initProxy(vm)}else{vm._renderProxy=vm}//exposerealselfvm._self=vminitLifecycle(vm)initEvents(vm)initRender(vm)callHook(vm,'beforeCreate',undefined,false/*setContext*/)initInjections(vm)//resolveinjectionsbeforedata/propsinitState(vm)initProvide(vm)//resolveprovideafterdata/propscallHook(vm,'created')/*istanbulignoreif*/if(__DEV__&&config.performance&&mark){vm._name=formatComponentName(vm,false)mark(endTag)measure(`vue${vm._name}init`,startTag,endTag)}if(vm.$options.el){vm.$mount(vm.$options.el)}}}exportfunctioninitInternalComponent(vm:Component,options:InternalComponentOptions){constopts=(vm.$options=Object.create((vm.constructorasany).options))//doingthisbecauseit'sfasterthandynamicenumeration.constparentVnode=options._parentVnodeopts.parent=options.parentopts._parentVnode=parentVnodeconstvnodeComponentOptions=parentVnode.componentOptions!opts.propsData=vnodeComponentOptions.propsDataopts._parentListeners=vnodeComponentOptions.listenersopts._renderChildren=vnodeComponentOptions.childrenopts._componentTag=vnodeComponentOptions.tagif(options.render){opts.render=options.renderopts.staticRenderFns=options.staticRenderFns}}exportfunctionresolveConstructorOptions(Ctor:typeofComponent){letoptions=Ctor.optionsif(Ctor.super){constsuperOptions=resolveConstructorOptions(Ctor.super)constcachedSuperOptions=Ctor.superOptionsif(superOptions!==cachedSuperOptions){//superoptionchanged,//needtoresolvenewoptions.Ctor.superOptions=superOptions//checkifthereareanylate-modified/attachedoptions(#4976)constmodifiedOptions=resolveModifiedOptions(Ctor)//updatebaseextendoptionsif(modifiedOptions){extend(Ctor.extendOptions,modifiedOptions)}options=Ctor.options=mergeOptions(superOptions,Ctor.extendOptions)if(options.name){options.components[options.name]=Ctor}}}returnoptions}functionresolveModifiedOptions(Ctor:typeofComponent):Record<string,any>|null{letmodifiedconstlatest=Ctor.optionsconstsealed=Ctor.sealedOptionsfor(constkeyinlatest){if(latest[key]!==sealed[key]){if(!modified)modified={}modified[key]=latest[key]}}returnmodified}
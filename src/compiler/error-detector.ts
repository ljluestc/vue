import{ASTElement,ASTNode}from'types/compiler'import{dirRE,onRE}from'./parser/index'typeRange={start?:number;end?:number}//thesekeywordsshouldnotappearinsideexpressions,butoperatorslike//typeof,instanceofandinareallowedconstprohibitedKeywordRE=newRegExp('\\b'+('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,'+'super,throw,while,yield,delete,export,import,return,switch,default,'+'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b')+'\\b')//theseunaryoperatorsshouldnotbeusedasproperty/methodnamesconstunaryOperatorsRE=newRegExp('\\b'+'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b')+'\\s*\\([^\\)]*\\)')//stripstringsinexpressionsconststripStringRE=/'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g//detectproblematicexpressionsinatemplateexportfunctiondetectErrors(ast:ASTNode|undefined,warn:Function){if(ast){checkNode(ast,warn)}}functioncheckNode(node:ASTNode,warn:Function){if(node.type===1){for(constnameinnode.attrsMap){if(dirRE.test(name)){constvalue=node.attrsMap[name]if(value){constrange=node.rawAttrsMap[name]if(name==='v-for'){checkFor(node,`v-for="${value}"`,warn,range)}elseif(name==='v-slot'||name[0]==='#'){checkFunctionParameterExpression(value,`${name}="${value}"`,warn,range)}elseif(onRE.test(name)){checkEvent(value,`${name}="${value}"`,warn,range)}else{checkExpression(value,`${name}="${value}"`,warn,range)}}}}if(node.children){for(leti=0;i<node.children.length;i++){checkNode(node.children[i],warn)}}}elseif(node.type===2){checkExpression(node.expression,node.text,warn,node)}}functioncheckEvent(exp:string,text:string,warn:Function,range?:Range){conststripped=exp.replace(stripStringRE,'')constkeywordMatch:any=stripped.match(unaryOperatorsRE)if(keywordMatch&&stripped.charAt(keywordMatch.index-1)!=='$'){warn(`avoidusingJavaScriptunaryoperatoraspropertyname:`+`"${keywordMatch[0]}"inexpression${text.trim()}`,range)}checkExpression(exp,text,warn,range)}functioncheckFor(node:ASTElement,text:string,warn:Function,range?:Range){checkExpression(node.for||'',text,warn,range)checkIdentifier(node.alias,'v-foralias',text,warn,range)checkIdentifier(node.iterator1,'v-foriterator',text,warn,range)checkIdentifier(node.iterator2,'v-foriterator',text,warn,range)}functioncheckIdentifier(ident:string|null|undefined,type:string,text:string,warn:Function,range?:Range){if(typeofident==='string'){try{newFunction(`var${ident}=_`)}catch(e:any){warn(`invalid${type}"${ident}"inexpression:${text.trim()}`,range)}}}functioncheckExpression(exp:string,text:string,warn:Function,range?:Range){try{newFunction(`return${exp}`)}catch(e:any){constkeywordMatch=exp.replace(stripStringRE,'').match(prohibitedKeywordRE)if(keywordMatch){warn(`avoidusingJavaScriptkeywordaspropertyname:`+`"${keywordMatch[0]}"\nRawexpression:${text.trim()}`,range)}else{warn(`invalidexpression:${e.message}in\n\n`+`${exp}\n\n`+`Rawexpression:${text.trim()}\n`,range)}}}functioncheckFunctionParameterExpression(exp:string,text:string,warn:Function,range?:Range){try{newFunction(exp,'')}catch(e:any){warn(`invalidfunctionparameterexpression:${e.message}in\n\n`+`${exp}\n\n`+`Rawexpression:${text.trim()}\n`,range)}}
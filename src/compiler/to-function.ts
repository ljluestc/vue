import{noop,extend}from'shared/util'import{warnasbaseWarn,tip}from'core/util/debug'import{generateCodeFrame}from'./codeframe'importtype{Component}from'types/component'import{CompilerOptions}from'types/compiler'typeCompiledFunctionResult={render:FunctionstaticRenderFns:Array<Function>}functioncreateFunction(code,errors){try{returnnewFunction(code)}catch(err:any){errors.push({err,code})returnnoop}}exportfunctioncreateCompileToFunctionFn(compile:Function):Function{constcache=Object.create(null)returnfunctioncompileToFunctions(template:string,options?:CompilerOptions,vm?:Component):CompiledFunctionResult{options=extend({},options)constwarn=options.warn||baseWarndeleteoptions.warn/*istanbulignoreif*/if(__DEV__){//detectpossibleCSPrestrictiontry{newFunction('return1')}catch(e:any){if(e.toString().match(/unsafe-eval|CSP/)){warn('ItseemsyouareusingthestandalonebuildofVue.jsinan'+'environmentwithContentSecurityPolicythatprohibitsunsafe-eval.'+'Thetemplatecompilercannotworkinthisenvironment.Consider'+'relaxingthepolicytoallowunsafe-evalorpre-compilingyour'+'templatesintorenderfunctions.')}}}//checkcacheconstkey=options.delimiters?String(options.delimiters)+template:templateif(cache[key]){returncache[key]}//compileconstcompiled=compile(template,options)//checkcompilationerrors/tipsif(__DEV__){if(compiled.errors&&compiled.errors.length){if(options.outputSourceRange){compiled.errors.forEach(e=>{warn(`Errorcompilingtemplate:\n\n${e.msg}\n\n`+generateCodeFrame(template,e.start,e.end),vm)})}else{warn(`Errorcompilingtemplate:\n\n${template}\n\n`+compiled.errors.map(e=>`-${e}`).join('\n')+'\n',vm)}}if(compiled.tips&&compiled.tips.length){if(options.outputSourceRange){compiled.tips.forEach(e=>tip(e.msg,vm))}else{compiled.tips.forEach(msg=>tip(msg,vm))}}}//turncodeintofunctionsconstres:any={}constfnGenErrors:any[]=[]res.render=createFunction(compiled.render,fnGenErrors)res.staticRenderFns=compiled.staticRenderFns.map(code=>{returncreateFunction(code,fnGenErrors)})//checkfunctiongenerationerrors.//thisshouldonlyhappenifthereisabuginthecompileritself.//mostlyforcodegendevelopmentuse/*istanbulignoreif*/if(__DEV__){if((!compiled.errors||!compiled.errors.length)&&fnGenErrors.length){warn(`Failedtogeneraterenderfunction:\n\n`+fnGenErrors.map(({err,code})=>`${(errasany).toString()}in\n\n${code}\n`).join('\n'),vm)}}return(cache[key]=res)}}
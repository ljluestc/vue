import{def,warn,isPlainObject,isArray}from'core/util'import{isCollectionType,isReadonly,isShallow,ReactiveFlags,UnwrapNestedRefs}from'./reactive'import{isRef,Ref,RefFlag}from'./ref'typePrimitive=string|number|boolean|bigint|symbol|undefined|nulltypeBuiltin=Primitive|Function|Date|Error|RegExpexporttypeDeepReadonly<T>=TextendsBuiltin?T:TextendsMap<inferK,inferV>?ReadonlyMap<DeepReadonly<K>,DeepReadonly<V>>:TextendsReadonlyMap<inferK,inferV>?ReadonlyMap<DeepReadonly<K>,DeepReadonly<V>>:TextendsWeakMap<inferK,inferV>?WeakMap<DeepReadonly<K>,DeepReadonly<V>>:TextendsSet<inferU>?ReadonlySet<DeepReadonly<U>>:TextendsReadonlySet<inferU>?ReadonlySet<DeepReadonly<U>>:TextendsWeakSet<inferU>?WeakSet<DeepReadonly<U>>:TextendsPromise<inferU>?Promise<DeepReadonly<U>>:TextendsRef<inferU>?Readonly<Ref<DeepReadonly<U>>>:Textends{}?{readonly[KinkeyofT]:DeepReadonly<T[K]>}:Readonly<T>constrawToReadonlyFlag=`__v_rawToReadonly`constrawToShallowReadonlyFlag=`__v_rawToShallowReadonly`exportfunctionreadonly<Textendsobject>(target:T):DeepReadonly<UnwrapNestedRefs<T>>{returncreateReadonly(target,false)}functioncreateReadonly(target:any,shallow:boolean){if(!isPlainObject(target)){if(__DEV__){if(isArray(target)){warn(`Vue2doesnotsupportreadonlyarrays.`)}elseif(isCollectionType(target)){warn(`Vue2doesnotsupportreadonlycollectiontypessuchasMaporSet.`)}else{warn(`valuecannotbemadereadonly:${typeoftarget}`)}}returntargetasany}if(__DEV__&&!Object.isExtensible(target)){warn(`Vue2doesnotsupportcreatingreadonlyproxyfornon-extensibleobject.`)}//alreadyareadonlyobjectif(isReadonly(target)){returntargetasany}//alreadyhasareadonlyproxyconstexistingFlag=shallow?rawToShallowReadonlyFlag:rawToReadonlyFlagconstexistingProxy=target[existingFlag]if(existingProxy){returnexistingProxy}constproxy=Object.create(Object.getPrototypeOf(target))def(target,existingFlag,proxy)def(proxy,ReactiveFlags.IS_READONLY,true)def(proxy,ReactiveFlags.RAW,target)if(isRef(target)){def(proxy,RefFlag,true)}if(shallow||isShallow(target)){def(proxy,ReactiveFlags.IS_SHALLOW,true)}constkeys=Object.keys(target)for(leti=0;i<keys.length;i++){defineReadonlyProperty(proxy,target,keys[i],shallow)}returnproxyasany}functiondefineReadonlyProperty(proxy:any,target:any,key:string,shallow:boolean){Object.defineProperty(proxy,key,{enumerable:true,configurable:true,get(){constval=target[key]returnshallow||!isPlainObject(val)?val:readonly(val)},set(){__DEV__&&warn(`Setoperationonkey"${key}"failed:targetisreadonly.`)}})}/***Returnsareactive-copyoftheoriginalobject,whereonlytherootlevel*propertiesarereadonly,anddoesNOTunwraprefsnorrecursivelyconvert*returnedproperties.*Thisisusedforcreatingthepropsproxyobjectforstatefulcomponents.*/exportfunctionshallowReadonly<Textendsobject>(target:T):Readonly<T>{returncreateReadonly(target,true)}